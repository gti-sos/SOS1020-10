{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\DivorcesGraph.svelte",
    "..\\..\\DivorcesTable.svelte",
    "..\\..\\IntegrationsCompetivity.svelte",
    "..\\..\\IntegrationsEnergy.svelte",
    "..\\..\\IntegrationsINE.svelte",
    "..\\..\\IntegrationsNBA.svelte",
    "..\\..\\IntegrationsSugarConsume.svelte",
    "..\\..\\IntegrationsTransfers.svelte",
    "..\\..\\IntegrationsUnivregs.svelte",
    "..\\..\\Integration-01.svelte",
    "..\\..\\Integration-05.svelte",
    "..\\..\\Integration-21.svelte",
    "..\\..\\Integration-26.svelte",
    "..\\..\\Integration-Ext-1.svelte",
    "..\\..\\Integration-Ext-2.svelte",
    "..\\..\\analytics.svelte",
    "..\\..\\global-suicides_Graph.svelte",
    "..\\..\\integrations_suicides.svelte",
    "..\\..\\integrations_suicides2.svelte",
    "..\\..\\integrations_suicides3.svelte",
    "..\\..\\integrations_suicides4.svelte",
    "..\\..\\integrations_suicides_external.svelte",
    "..\\..\\integrations_suicides_external2.svelte"
  ],
  "sourcesContent": [
    "<script>\r\n\r\nimport Button from \"sveltestrap/src/Button.svelte\";\r\nimport  {pop} from \"svelte-spa-router\";\r\n\r\n\r\n\r\nasync function loadGraph(){\r\n\r\n\r\n    const raw_data = await fetch(\"/api/v2/global-divorces\");\r\n    let data = await raw_data.json();\r\n\r\n    let countries = Array.from(new Set(data.map(d => {return d.country;})));\r\n    let years = Array.from(new Set(data.map(d => {return d.year})));\r\n\r\n    let series_graph = [];\r\n    var objeto = {};\r\n\r\n\r\n    for(var i = 0; i<years.length; i++){\r\n        var divorce_year =  [];\r\n        for(var j = 0; j<data.length; j++){\r\n            if(data[j].year == years[i]){\r\n                console.log(\"entra\");\r\n                divorce_year[j] = data[j].divorce;\r\n            }\r\n            else{\r\n                divorce_year[j] = 0;\r\n            }\r\n        }\r\n        series_graph.push({\r\n            \"name\": years[i],\r\n            \"data\": divorce_year\r\n        });\r\n\r\n    }\r\n   \r\n    let serie_final = series_graph;\r\n    console.log(serie_final);\r\n\r\n    Highcharts.chart('container', {\r\n    chart: {\r\n        type: 'column'\r\n    },\r\n    title: {\r\n        text: 'Número de divorcios por paises'\r\n    },\r\n    subtitle: {\r\n        text: 'Fuente: https://datosmacro.expansion.com/demografia/divorcios'\r\n    },\r\n    xAxis: {\r\n        categories: countries,\r\n        crosshair: true\r\n    },\r\n    yAxis: {\r\n     //   tickInterval: 10,\r\n        min: 0,\r\n        title: {\r\n            text: 'Nº de divorcios'\r\n        }\r\n    },\r\n    tooltip: {\r\n        headerFormat: '<span style=\"font-size:10px\">{point.key}</span><table>',\r\n        pointFormat: '<tr><td style=\"color:{series.color};padding:0\">{series.name}: </td>' +\r\n            '<td style=\"padding:0\"><b>{point.y:.0f} </b></td></tr>',\r\n        footerFormat: '</table>',\r\n        shared: true,\r\n        useHTML: true\r\n    },\r\n    plotOptions: {\r\n        column: {\r\n            pointPadding: 0.2,\r\n            borderWidth: 0\r\n        }\r\n    },\r\n    series: serie_final,\r\n});\r\n}\r\n\r\n\r\n</script>\r\n\r\n<svelte:head><script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n<script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n<script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n<script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load = \"{loadGraph}\"></script>\r\n</svelte:head>\r\n\r\n\r\n\r\n<main>\r\n    <h2>Gráfico highchart</h2>\r\n\r\n    <figure class=\"highcharts-figure\">\r\n        <div id=\"container\"></div>\r\n        <p class=\"highcharts-description\">\r\n            Gráfico de columnas que compara el número de divorcios por paises y años.\r\n        </p>\r\n    </figure>\r\n    <div>\r\n<Button outline color=\"secondary\" on:click=\"{pop}\" > <i class=\"fas fa-arrow-circle-left\"></i> Atrás </Button>\r\n</div>\r\n</main>\r\n\r\n<style>.highcharts-figure, .highcharts-data-table table {\r\n    min-width: 310px; \r\n    max-width: 900px;\r\n    margin: 1em auto;\r\n}\r\n\r\n#container {\r\n    height: 700px;\r\n}\r\n\r\n.highcharts-data-table table {\r\n\tfont-family: Verdana, sans-serif;\r\n\tborder-collapse: collapse;\r\n\tborder: 1px solid #EBEBEB;\r\n\tmargin: 10px auto;\r\n\ttext-align: center;\r\n\twidth: 100%;\r\n\tmax-width: 500px;\r\n}\r\n.highcharts-data-table caption {\r\n    padding: 1em 0;\r\n    font-size: 1.2em;\r\n    color: #555;\r\n}\r\n.highcharts-data-table th {\r\n\tfont-weight: 600;\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n    background: #f8f8f8;\r\n}\r\n.highcharts-data-table tr:hover {\r\n    background: #f1f7ff;\r\n}\r\n</style>",
    "<script>\r\n\r\n\timport {\r\n\t\t\tonMount\r\n\t\t} from \"svelte\";\r\n\t\t\r\n\t\timport {\r\n\t\t\tpop\r\n\t\t} from \"svelte-spa-router\";\r\n\t\timport Table from \"sveltestrap/src/Table.svelte\";\r\n\t\timport Button from \"sveltestrap/src/Button.svelte\";\r\n\t\timport Input from \"sveltestrap/src/Input.svelte\";\r\n\t\t\r\n\t\timport Label from \"sveltestrap/src/Label.svelte\";\r\n\t\timport FormGroup from \"sveltestrap/src/FormGroup.svelte\";\r\n\r\n\t\timport { Pagination, PaginationItem, PaginationLink } from 'sveltestrap';\r\n\r\n\r\n\t\r\n\tlet currentCountry = \"\";\r\n\r\n\tlet showPagination = true;\r\n\r\n\tlet divorces = [];\r\n\tlet newDivorce={\r\n\t\tcountry: \"\",\r\n\t\tyear: parseInt(\"\"),\r\n\t\tdivorce: parseInt(\"\"),\r\n\t\tcrude_rate: parseFloat(\"\"),\r\n\t\tvariation: parseFloat(\"\")\r\n\r\n\t};\r\n\r\n\r\n\tlet numberElementsPages = 10;\r\n\tlet offset = 0;\r\n\tlet currentPage = 1; \r\n\tlet moreData = true;\r\n\r\n\tonMount(getDivorces);\r\n\r\n//////////////////////////////////////////////////////////////////////////////////////////////////\r\n////////////////////////////////GET globalDivorces  //////////////////////////////////////////////\r\n//////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\tasync function getDivorces() {\r\n\r\n\t\tconst res = await fetch(\"/api/v2/global-divorces?offset=\" + numberElementsPages * offset + \"&limit=\" + numberElementsPages); \r\n\r\n\t\tconsole.log(\"Fetching divorces...\");\r\n\r\n\t\tif(res.ok){\r\n\t\t\tconsole.log(\"Ok: \");\r\n\t\t\tconst json = await res.json();\r\n\t\t\tdivorces = json;\r\n\t\t\tconsole.log(\"Received \" + divorces.length + \" divorces.\");\r\n\r\n\t\t\tif (divorces.length!=10){\r\n\t\t\t\tmoreData=false\r\n\t\t\t} else{\r\n\t\t\t\t\t\tconst next = await fetch(\"/api/v2/global-divorces?offset=\" + numberElementsPages * (offset+1) + \"&limit=\" + numberElementsPages); \r\n\t\t\t\t\t\tconsole.log(\"La variable NEXT tiene el estado: \" + next.status)\r\n\t\t\t\t\t\tconst jsonNext = await next.json();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (jsonNext.length == 0 || next.status==404) {  \r\n\t\t\t\t\t\t\tmoreData = false;\r\n\t\t\t\t\t\t} \r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tmoreData = true; \r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t} \r\n\t\t\r\n\t\telse{console.log(\"ERROR!\");\r\n\t\t\terrorResponse(res);}\r\n\r\n\t}\r\n\r\n\r\n\tfunction addOffset (increment) {\r\n\t\toffset += increment;\r\n\t\tcurrentPage += increment;\r\n\t\tgetDivorces();\r\n\t}\r\n\r\n//////////////////////////////////////////////////////////////////////////////////////////////////\r\n////////////////////////////////GET globalDivorces  loadInitialData///////////////////////////////\r\n//////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\tasync function loadInitialData(){\r\n\t\tconsole.log(\"Loading Initial Data...\");\r\n\r\n\t\tconst res = await fetch(\"/api/v2/global-divorces/loadInitialData\").then(function (res) {\r\n\t\t\tif(res.ok){\r\n\t\t\tconsole.log(\"Ok: \");\r\n\t\t\tsuccessAlert(\"Datos insertados correctamente.\");\r\n\t\t\tgetDivorces();\r\n\r\n\t\t}\r\n\t\telse{console.log(\"ERROR!\");\r\n\t\t\terrorResponse(res);\r\n\t}\r\n\r\n\t\t\t\t});\r\n\r\n\t\t\r\n\r\n\t}\r\n\r\n////////////////////////////////////////////////////////////////////////////////////////////////\r\n////////////////////////////////    Función de busqueda    /////////////////////////////////////\r\n////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\tasync function search(country) {\r\n\t\tconsole.log(\"Searching data: \" + country );\r\n\r\n\t\tvar url = \"/api/v2/global-divorces\";\r\n\t\t\turl = url + \"?country=\" + country ; \r\n\t\tconst res = await fetch(url);\r\n\t\tif (res.ok) {\r\n\t\t\tconsole.log(\"Ok:\");\r\n\t\t\tconst json = await res.json();\r\n\t\t\tdivorces = json;\t\t\t\r\n\t\t\tconsole.log(\"Found \" + divorces.length + \" global divorces stats.\");\r\n\t\t\tshowPagination = false;\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR!\");\r\n\t\t\terrorAlert(\"País \" + country +\" no encontrado.\");\r\n\t\t}\r\n\t\t\r\n\t}\r\n//////////////////////////////////////////////////////////////////////////////////////////////////\r\n////////////////////////////////       Insert Divorce      ///////////////////////////////////////\r\n//////////////////////////////////////////////////////////////////////////////////////////////////\r\n\tasync function insertDivorce() {\r\n\t\tvar pais =newDivorce.country;\r\n\t\tvar MyReg = /[0-9]/;\r\n\r\n\t\tconsole.log(\"Inserting divorce...\" + JSON.stringify(newDivorce));\r\n\t\tif (newDivorce.country == \"\" || newDivorce.country == null || newDivorce.year == \"\" \r\n\t\t\t|| newDivorce.year == null) {\r\n\t\t\t\r\n\t\t\terrorAlert(\"Se debe incluir el nombre del país y el año obligatoriamente\");\r\n\t\t} \r\n\t\telse if(MyReg.test(pais)){\r\n\t\t\terrorAlert(\"Formato de datos incorrecto\");\r\n\t\t}\r\n\t\telse {\r\n\t\t\t\tconst res = await fetch(\"/api/v2/global-divorces\", {\r\n\t\t\t\t\tmethod: \"POST\",\r\n\t\t\t\t\tbody: JSON.stringify(newDivorce),\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t\t\t}\r\n\t\t\t\t}).then(function (res) {\r\n\t\t\t\t\tif(res.ok){\r\n\t\t\t\t\tgetDivorces();\r\n\t\t\t\t\tsuccessAlert(\"¡Dato insertado correctamente!\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{errorResponse(res);}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t}\r\n\r\n\r\n//////////////////////////////////////////////////////////////////////////////////////////////////\r\n////////////////////////////////       Delete Divorce      ///////////////////////////////////////\r\n//////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\tasync function deleteDivorce(country,year) {\r\n\t\tconsole.log(\"Deleting divorce...\" + JSON.stringify(country) + JSON.stringify(year) );\r\n\t\tconst res = await fetch(\"/api/v2/global-divorces/\" + country+\"/\"+year, {\r\n\t\t\tmethod: \"DELETE\"\r\n\t\t}).then(function (res) {\r\n\t\t\tif(res.ok){\r\n\t\t\tgetDivorces();\r\n\t\t\tsuccessAlert(\"¡Dato eliminado correctamente!\")\r\n\t\t}\r\n\t\t\telse{errorResponse(res);}\r\n\t\t});\r\n\t}\r\n\r\n//////////////////////////////////////////////////////////////////////////////////////////////////\r\n////////////////////////////////         Delte All         ///////////////////////////////////////\r\n//////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\tasync function deleteAll() {\r\n\t\tconsole.log(\"Deleting divorces...\");\r\n\t\tconst res = await fetch(\"/api/v2/global-divorces/\" , {\r\n\t\t\tmethod: \"DELETE\"\r\n\t\t}).then(function (res) {\r\n\t\t\tlocation.reload();\r\n\t\t});\r\n\t}\r\n\r\n\r\n//////////////////////////////////////////////////////////////////////////////////////////////////\r\n///////////////////////////         Funciones de alertas         /////////////////////////////////\r\n//////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\tfunction errorAlert(error) {\r\n\t\tclearAlert();\r\n\t\tvar alert_element = document.getElementById(\"div_alert\");\r\n\t\talert_element.style = \"position: fixed; top: 0px; top: 1%; width: 90%;\";\r\n\t\talert_element.className = \"alert alert-dismissible in alert-danger \";\r\n\t\talert_element.innerHTML = \"<strong>¡ERROR!</strong> ¡Ha ocurrido un error! \" + error;\r\n\t\t\r\n\t\tsetTimeout(() => {\r\n\t\t\tclearAlert();\r\n\t\t}, 6000);\r\n\t}\r\n\r\n\tfunction successAlert(mensaje) {\r\n\t\tclearAlert();\r\n\t\tvar alert_element = document.getElementById(\"div_alert\");\r\n\t\talert_element.style = \"position: fixed; top: 0px; top: 1%; width: 90%;\";\r\n\t\talert_element.className = \"alert alert-dismissible in alert-success \";\r\n\t\talert_element.innerHTML = \"<strong>¡Exito!</strong> \"+ mensaje;\r\n\t\t\r\n\t\tsetTimeout(() => {\r\n\t\t\tclearAlert();\r\n\t\t}, 6000);\r\n\t}\r\n\t\r\n\tfunction clearAlert () {\r\n\t\tvar alert_element = document.getElementById(\"div_alert\");\r\n\t\talert_element.style = \"display: none; \";\r\n\t\talert_element.className = \"alert alert-dismissible in\";\r\n\t\talert_element.innerHTML = \"\";\r\n\t}\r\nfunction errorResponse(res) {\r\n\tvar status = res.status\r\n\tswitch (status) {\r\n\t\tcase 400:\r\n\t\t\talert(\"Codigo de error: \" + status + '\\n'+ \"Error de prueba\");\r\n\t\t\tbreak;\r\n\t\tcase 401:\r\n\t\t\talert(\"Codigo de error: \" + status + '\\n'+ \"Error de prueba 1\");\r\n\t\t\tbreak;\r\n\t\tcase 404:\r\n\t\t\talert(\"Codigo de error: \" + status + '\\n'+ \"Error de prueba 1\");\r\n\t\t\tbreak;\r\n\t\tcase 405:\r\n\t\t\talert(\"Codigo de error: \" + status + '\\n'+ \"Error de prueba 1\");\r\n\t\t\tbreak;\r\n\t\tcase 405:\r\n\t\t\talert(\"Codigo de error: \" + status + '\\n'+ \"Error de prueba 1\");\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\talert(\"Codigo de error: \"+ status +'\\n'+ \"Error de desconocido\")\r\n\t\t\tbreak;\r\n\t}\r\n}\r\n\r\n\r\n\r\n</script>\r\n\r\n<main style = \"padding: 10px;\">\r\n\t<div role=\"alert\" id=\"div_alert\" style=\"display: none;\">\r\n\t</div>\r\n\t{#await divorces}\r\n\t\tLoading divorces...\r\n\t{:then divorces}\r\n\r\n\t\t<FormGroup style=\"margin-top:60px\"> \r\n\t\t\t<Label for=\"selectCountry\"> Búsqueda por país </Label>\r\n\t\t\t<Input type=\"text\" placeholder=\"Introduce un país\" bind:value=\"{currentCountry}\">\r\n\t\t\t</Input>\r\n\t\t</FormGroup>\r\n\t\t\t\t\r\n\t\r\n\r\n\t\t<Button style=\"margin-bottom: 1%;\" outline color=\"primary\" on:click=\"{search(currentCountry)}\" class=\"button-search\" > <i class=\"fas fa-search\"></i> Buscar </Button>\r\n\t\t\r\n\r\n\t\t<Table bordered style=\"text-align: center;\">\r\n\t\t\t<thead>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<th>País</th>\r\n\t\t\t\t\t<th>Año</th>\r\n\t\t\t\t\t<th>Divorcios</th>\r\n\t\t\t\t\t<th>Tasa bruta</th>\r\n\t\t\t\t\t<th>Variación</th>\r\n\t\t\t\t\t<th>Actions</th>\r\n\r\n\t\t\t\t</tr>\r\n\t\t\t</thead>\r\n\t\t\t<tbody>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td><input bind:value=\"{newDivorce.country}\"></td>\r\n\t\t\t\t\t<td><input type=\"number\" bind:value=\"{newDivorce.year}\"></td>\r\n\t\t\t\t\t<td><input type=\"number\" bind:value=\"{newDivorce.divorce}\"></td>\r\n\t\t\t\t\t<td><input type=\"number\" bind:value=\"{newDivorce.crude_rate}\">‰</td>\r\n\t\t\t\t\t<td><input type=\"number\" bind:value=\"{newDivorce.variation}\"></td>\r\n\t\t\t\t\t<td> <Button outline  color=\"primary\" on:click={insertDivorce}>Insertar</Button> </td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t{#each divorces as d}\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>  <a href=\"#/globalDivorcesAPI/{d.country}/{d.year}\">{d.country}</a>  </td>\r\n\t\t\t\t\t\t<td>{d.year}</td>\r\n\t\t\t\t\t\t<td>{d.divorce}</td>\r\n\t\t\t\t\t\t<td>{d.crude_rate}‰</td>\r\n\t\t\t\t\t\t<td>{d.variation}</td>\r\n\t\t\t\t\t\t<td> <Button outline  color=\"danger\" on:click={deleteDivorce(d.country,d.year)}>Eliminar</Button> </td>\r\n\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t{/each}\r\n\t\t\t</tbody>\r\n\t\t\t\r\n\r\n\t\t</Table>\r\n\t{/await}\r\n\t{#if showPagination == true}\r\n\t<div><Pagination style = \"text-align: center;\"  ariaLabel=\"Cambiar de página\">\r\n\r\n\r\n\t<PaginationItem class=\"{currentPage === 1 ? 'disabled' : ''}\">\r\n\t  <PaginationLink previous href=\"#/globalDivorcesAPI\" on:click=\"{() => addOffset(-1)}\" />\r\n\t</PaginationItem>\r\n\t\r\n\t<!-- If we are not in the first page-->\r\n\t{#if currentPage != 1}\r\n\t<PaginationItem>\r\n\t\t<PaginationLink href=\"#/globalDivorcesAPI\" on:click=\"{() => addOffset(-1)}\" >{currentPage - 1}</PaginationLink>\r\n\t</PaginationItem>\r\n\t{/if}\r\n\t<PaginationItem active>\r\n\t\t<PaginationLink href=\"#/globalDivorcesAPI\" >{currentPage}</PaginationLink>\r\n\t</PaginationItem>\r\n\r\n\t<!-- If there are more elements-->\r\n\t{#if moreData}\r\n\t<PaginationItem >\r\n\t\t<PaginationLink href=\"#/globalDivorcesAPI\" on:click=\"{() => addOffset(1)}\">{currentPage + 1}</PaginationLink>\r\n\t</PaginationItem>\r\n\t{/if}\r\n\r\n\t<PaginationItem class=\"{moreData ? '' : 'disabled'}\">\r\n\t  <PaginationLink next href=\"#/globalDivorcesAPI\" on:click=\"{() => addOffset(1)}\"/>\r\n\t</PaginationItem>\r\n\r\n</Pagination></div>\r\n\t{/if}\r\n\t<div>\r\n\t\t\r\n\t<Button style=\"float: right;\" outline  color=\"danger\" on:click={deleteAll}>Eliminar todos los recursos</Button>\r\n\t<Button style=\"float: left;\" outline  color=\"primary\" on:click={loadInitialData} on:click={showPagination=true}>Recargar recursos</Button>\r\n\r\n\t</div>\r\n\t{#if showPagination==false}\r\n\t<Button style=\"float: left; margin-left: 20px;\" outline  color=\"secondary\" on:click={getDivorces} on:click={showPagination=true}>Atrás</Button>\t\r\n\t{/if}\r\n\r\n\t{#if showPagination==true}\r\n\t<Button style=\"float: left; margin-left: 20px;\" outline  color=\"secondary\" on:click={pop} on:click={showPagination=true}>Atrás</Button>\t\r\n\t{/if}\r\n\t<p></p>\r\n\t<div class=\"graficas\">\r\n\t\r\n\t<Button  outline  color=\"primary\" role=\"link\" onclick=\"window.location = '#/globalDivorcesAPI/DivorcesGraph'\">Gráfica HightChart</Button>\r\n\t<Button  outline  color=\"primary\" role=\"link\" onclick=\"window.location = '#/globalDivorcesAPI/DivorcesGraph2'\">Gráfica Chart.js</Button>\r\n\t<Button  outline  color=\"primary\" role=\"link\" onclick=\"window.location = '#/globalDivorcesAPI/Integrations'\">Integraciones</Button>\r\n\r\n\r\n\t</div>\r\n\r\n</main>\r\n<style>\r\n.graficas {\r\n\r\n        position:absolute;\r\n\r\n        display:block;\r\n\r\n        bottom:75%;\r\n\r\n        left:10px;\r\n\r\n}\r\n</style>\r\n",
    "<script>\r\n\r\nimport Button from \"sveltestrap/src/Button.svelte\";\r\nimport  {pop} from \"svelte-spa-router\";\r\n\r\n\r\n\r\nasync function loadGraph(){\r\n\r\n\r\n    const raw_data1 = await fetch(\"/api/v2/global-divorces\");\r\n    const raw_data2 = await fetch(\"/api/v2/global_competitiveness_index\");\r\n\r\n    let data = await raw_data1.json();\r\n    let data2 = await raw_data2.json();\r\n\r\n\r\n    let countries = Array.from(new Set(data.map((d) => {return d.country+\" \"+d.year;})));\r\n    let divorces = Array.from(new Set(data.map((d) => {return d.divorce;})));\r\n\r\n\r\n   \r\n\r\n    let places = Array.from(new Set(data2.map(t => {return t.country;})));\r\n    let index = Array.from(new Set(data2.map(t => {return t.index;})));\r\n\r\n    let places_countries =places.concat(countries);\r\n\r\n     var salto = [];\r\n    for(var i = 0; i<places.length;i++){\r\n        salto[i] = 0;\r\n    }\r\n    divorces = salto.concat(divorces);\r\n    \r\n    console.log(\"ARRAY \"+places_countries);\r\n\r\n\r\n    \r\n   \r\n\r\n    Highcharts.chart('container', {\r\n    chart: {\r\n        type: 'column'\r\n    },\r\n    title: {\r\n        text: 'Número de divorcios por paises e Índices de competitividad globales'\r\n    },\r\n    subtitle: {\r\n        text: 'Para visualizar uno de los datos solo seleccione el campo a eliminar.'\r\n    },\r\n    xAxis: {\r\n        categories: places_countries,\r\n        crosshair: true\r\n    },\r\n    yAxis: {\r\n     //   tickInterval: 10,\r\n        min: 0,\r\n        title: {\r\n            text: 'Nº de divorcios e Índice de competitividad globales'\r\n        }\r\n    },\r\n    tooltip: {\r\n        headerFormat: '<span style=\"font-size:10px\">{point.key}</span><table>',\r\n        pointFormat: '<tr><td style=\"color:{series.color};padding:0\">{series.name}: </td>' +\r\n            '<td style=\"padding:0\"><b>{point.y:.0f} </b></td></tr>',\r\n        footerFormat: '</table>',\r\n        shared: true,\r\n        useHTML: true\r\n    },\r\n    plotOptions: {\r\n        column: {\r\n            pointPadding: 0.2,\r\n            borderWidth: 0\r\n        }\r\n    },\r\n    series: [{\r\n        name:'Número de Divorcios',\r\n        data: divorces\r\n    },\r\n    {\r\n        name: 'Índices de competitividad globales',\r\n        data: index\r\n    }\r\n    \r\n    ],\r\n});\r\n}\r\n\r\n\r\n</script>\r\n\r\n<svelte:head><script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n<script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n<script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n<script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load = \"{loadGraph}\"></script>\r\n</svelte:head>\r\n\r\n\r\n\r\n<main>\r\n    <h2>Integración API Índice de competitividad global</h2>\r\n\r\n    <figure class=\"highcharts-figure\">\r\n        <div id=\"container\"></div>\r\n        <p class=\"highcharts-description\">\r\n            Gráfico de columnas que compara el número de divorcios por paises y el índice de competitividad globales.\r\n            Estos datos no tienen ningún tipo de relación. \r\n        \r\n        </p>\r\n    </figure>\r\n    <div>\r\n<Button outline color=\"secondary\" on:click=\"{pop}\" > <i class=\"fas fa-arrow-circle-left\"></i> Atrás </Button>\r\n</div>\r\n</main>\r\n\r\n<style>.highcharts-figure, .highcharts-data-table table {\r\n    min-width: 310px; \r\n    max-width: 900px;\r\n    margin: 1em auto;\r\n}\r\n\r\n#container {\r\n    height: 700px;\r\n}\r\n\r\n.highcharts-data-table table {\r\n\tfont-family: Verdana, sans-serif;\r\n\tborder-collapse: collapse;\r\n\tborder: 1px solid #EBEBEB;\r\n\tmargin: 10px auto;\r\n\ttext-align: center;\r\n\twidth: 100%;\r\n\tmax-width: 500px;\r\n}\r\n.highcharts-data-table caption {\r\n    padding: 1em 0;\r\n    font-size: 1.2em;\r\n    color: #555;\r\n}\r\n.highcharts-data-table th {\r\n\tfont-weight: 600;\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n    background: #f8f8f8;\r\n}\r\n.highcharts-data-table tr:hover {\r\n    background: #f1f7ff;\r\n}\r\n</style>",
    "<script>\r\n\r\nimport Button from \"sveltestrap/src/Button.svelte\";\r\nimport  {pop} from \"svelte-spa-router\";\r\n\r\n\r\n\r\nasync function loadGraph(){\r\n\r\n\r\n    const raw_data1 = await fetch(\"/api/v2/global-divorces\");\r\n    const raw_data2 = await fetch(\"/api/v3/oil-coal-nuclear-energy-consumption-stats\");\r\n\r\n    let data = await raw_data1.json();\r\n    let data2 = await raw_data2.json();\r\n\r\n    let countries = Array.from(new Set(data.map((d) => {return d.country+\" \"+d.year;})));\r\n    let divorces = Array.from(new Set(data.map((d) => {return d.divorce;})));\r\n\r\n\r\n    let place = Array.from(new Set(data2.map(t => {return t.country;})));\r\n    let oil = [];\r\n\r\n    for(var i = 0; i<data2.length; i++){\r\n        let obj = data2[i];\r\n        oil[i] = obj[\"oil-consumption\"];\r\n\r\n    }\r\n\r\n    let place_countries = place.concat(countries);\r\n\r\n     var salto = [];\r\n    for(var i = 0; i<place.length;i++){\r\n        salto[i] = 0;\r\n    }\r\n    divorces = salto.concat(divorces);\r\n    \r\n    console.log(\"ARRAY \"+place_countries);\r\n\r\n\r\n    \r\n   \r\n\r\n    Highcharts.chart('container', {\r\n    chart: {\r\n        type: 'column'\r\n    },\r\n    title: {\r\n        text: 'Número de divorcios por paises y consumo de petróleo'\r\n    },\r\n    subtitle: {\r\n        text: 'Para visualizar uno de los datos solo seleccione el campo a eliminar.'\r\n    },\r\n    xAxis: {\r\n        categories: place_countries,\r\n        crosshair: true\r\n    },\r\n    yAxis: {\r\n     //   tickInterval: 10,\r\n        min: 0,\r\n        title: {\r\n            text: 'Nº de divorcios y de toneladas de petróleo'\r\n        }\r\n    },\r\n    tooltip: {\r\n        headerFormat: '<span style=\"font-size:10px\">{point.key}</span><table>',\r\n        pointFormat: '<tr><td style=\"color:{series.color};padding:0\">{series.name}: </td>' +\r\n            '<td style=\"padding:0\"><b>{point.y:.0f} </b></td></tr>',\r\n        footerFormat: '</table>',\r\n        shared: true,\r\n        useHTML: true\r\n    },\r\n    plotOptions: {\r\n        column: {\r\n            pointPadding: 0.2,\r\n            borderWidth: 0\r\n        }\r\n    },\r\n    series: [{\r\n        name:'Número de Divorcios',\r\n        data: divorces\r\n    },\r\n    {\r\n        name: 'Número de toneladas de petróleo',\r\n        data: oil\r\n    }\r\n    \r\n    ],\r\n});\r\n}\r\n\r\n\r\n</script>\r\n\r\n<svelte:head><script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n<script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n<script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n<script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load = \"{loadGraph}\"></script>\r\n</svelte:head>\r\n\r\n\r\n\r\n<main>\r\n    <h2>Integración API Consumo de Energías Naturales</h2>\r\n\r\n    <figure class=\"highcharts-figure\">\r\n        <div id=\"container\"></div>\r\n        <p class=\"highcharts-description\">\r\n            Gráfico de columnas que compara el número de divorcios por paises y años con el consumo en toneladas de petróleo.\r\n            Estos datos no tienen ningún tipo de relación. \r\n        \r\n        </p>\r\n    </figure>\r\n    <div>\r\n<Button outline color=\"secondary\" on:click=\"{pop}\" > <i class=\"fas fa-arrow-circle-left\"></i> Atrás </Button>\r\n</div>\r\n</main>\r\n\r\n<style>.highcharts-figure, .highcharts-data-table table {\r\n    min-width: 310px; \r\n    max-width: 900px;\r\n    margin: 1em auto;\r\n}\r\n\r\n#container {\r\n    height: 700px;\r\n}\r\n\r\n.highcharts-data-table table {\r\n\tfont-family: Verdana, sans-serif;\r\n\tborder-collapse: collapse;\r\n\tborder: 1px solid #EBEBEB;\r\n\tmargin: 10px auto;\r\n\ttext-align: center;\r\n\twidth: 100%;\r\n\tmax-width: 500px;\r\n}\r\n.highcharts-data-table caption {\r\n    padding: 1em 0;\r\n    font-size: 1.2em;\r\n    color: #555;\r\n}\r\n.highcharts-data-table th {\r\n\tfont-weight: 600;\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n    background: #f8f8f8;\r\n}\r\n.highcharts-data-table tr:hover {\r\n    background: #f1f7ff;\r\n}\r\n</style>",
    "<script>\r\n\r\nimport Button from \"sveltestrap/src/Button.svelte\";\r\nimport  {pop} from \"svelte-spa-router\";\r\n\r\n\r\n\r\nasync function loadGraph(){\r\n\r\n\r\n    const raw_data1 = await fetch(\"/api/v2/global-divorces\");\r\n    const raw_data2 = await fetch(\"https://servicios.ine.es/wstempus/js/es/DATOS_TABLA/t20/p274/serie/prov/p02/02006.px?tip=AM\", {\r\n\t\"method\": \"GET\"\r\n});\r\n\r\n    \r\n\r\n    let data = await raw_data1.json();\r\n    let data2 = await raw_data2.json();\r\n    console.log(data2);\r\n\r\n    let countries = Array.from(new Set(data.map((d) => {return d.country+\" \"+d.year;})));\r\n    let divorces = Array.from(new Set(data.map((d) => {return d.divorce;})));\r\n\r\n    let casas = [];\r\n    let valor = [];\r\n    \r\n    for(var i = 9; i<18; i++){\r\n        let obj = data2[i][\"Nombre\"];\r\n        casas[i-9] = obj;\r\n        valor[i-9] = data2[i][\"Data\"][0][\"Valor\"];\r\n\r\n    }\r\n    console.log(\"Casas \"+casas);\r\n\r\n    console.log(\"Valor \"+valor);\r\n\r\n    let casas_countries = casas.concat(countries);\r\n\r\n     var salto = [];\r\n    for(var i = 0; i<casas.length;i++){\r\n        salto[i] = 0;\r\n    }\r\n    divorces = salto.concat(divorces);\r\n    \r\n\r\n\r\n    \r\n   \r\n\r\n    Highcharts.chart('container', {\r\n    chart: {\r\n        type: 'column'\r\n    },\r\n    title: {\r\n        text: 'Número de divorcios por paises y número de personas que viven en casas de menos de 46m2 en toda España'\r\n    },\r\n    subtitle: {\r\n        text: 'Para visualizar uno de los datos solo seleccione el campo a eliminar.'\r\n    },\r\n    xAxis: {\r\n        categories: casas_countries,\r\n        crosshair: true\r\n    },\r\n    yAxis: {\r\n     //   tickInterval: 10,\r\n        min: 0,\r\n        title: {\r\n            text: 'Nº de divorcios y número de personas que viven en casas de menos de 46m2 en toda España'\r\n        }\r\n    },\r\n    tooltip: {\r\n        headerFormat: '<span style=\"font-size:10px\">{point.key}</span><table>',\r\n        pointFormat: '<tr><td style=\"color:{series.color};padding:0\">{series.name}: </td>' +\r\n            '<td style=\"padding:0\"><b>{point.y:.0f} </b></td></tr>',\r\n        footerFormat: '</table>',\r\n        shared: true,\r\n        useHTML: true\r\n    },\r\n    plotOptions: {\r\n        column: {\r\n            pointPadding: 0.2,\r\n            borderWidth: 0\r\n        }\r\n    },\r\n    series: [{\r\n        name:'Número de Divorcios',\r\n        data: divorces\r\n    },\r\n    {\r\n        name: 'Número de personas que viven en casas de menos de 46m2 ',\r\n        data: valor\r\n    }\r\n    \r\n    ],\r\n});\r\n}\r\n\r\n\r\n</script>\r\n\r\n<svelte:head><script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n<script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n<script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n<script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load = \"{loadGraph}\"></script>\r\n</svelte:head>\r\n\r\n\r\n\r\n<main>\r\n    <h2>Integración API Externa Número de hogares por comunidades y ciudades autónomas según tamaño de hogar y superficie útil de la vivienda.</h2>\r\n\r\n    <figure class=\"highcharts-figure\">\r\n        <div id=\"container\"></div>\r\n        <p class=\"highcharts-description\">\r\n            Gráfico de columnas que compara el número de divorcios por paises y número de personas que viven en casas de menos de 46m2 en toda España.\r\n            Estos datos no tienen ningún tipo de relación. Para visualizar los puntos elimine los datos de divorcios de la tabla. \r\n        </p>\r\n        <p>En este caso he seleccionado los datos de las casas de menos de 46m2 en toda España para que la gráfica no fuera demasidado grande. </p>\r\n    </figure>\r\n    <div>\r\n<Button outline color=\"secondary\" on:click=\"{pop}\" > <i class=\"fas fa-arrow-circle-left\"></i> Atrás </Button>\r\n</div>\r\n</main>\r\n\r\n<style>.highcharts-figure, .highcharts-data-table table {\r\n    min-width: 310px; \r\n    max-width: 900px;\r\n    margin: 1em auto;\r\n}\r\n\r\n#container {\r\n    height: 700px;\r\n}\r\n\r\n.highcharts-data-table table {\r\n\tfont-family: Verdana, sans-serif;\r\n\tborder-collapse: collapse;\r\n\tborder: 1px solid #EBEBEB;\r\n\tmargin: 10px auto;\r\n\ttext-align: center;\r\n\twidth: 100%;\r\n\tmax-width: 500px;\r\n}\r\n.highcharts-data-table caption {\r\n    padding: 1em 0;\r\n    font-size: 1.2em;\r\n    color: #555;\r\n}\r\n.highcharts-data-table th {\r\n\tfont-weight: 600;\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n    background: #f8f8f8;\r\n}\r\n.highcharts-data-table tr:hover {\r\n    background: #f1f7ff;\r\n}\r\n</style>",
    "<script>\r\n\r\nimport Button from \"sveltestrap/src/Button.svelte\";\r\nimport  {pop} from \"svelte-spa-router\";\r\n\r\n\r\n\r\nasync function loadGraph(){\r\n\r\n\r\n    const raw_data1 = await fetch(\"/api/v2/global-divorces\");\r\n    const raw_data2 = await fetch(\"https://free-nba.p.rapidapi.com/stats?page=0&per_page=25\", {\r\n\t\"method\": \"GET\",\r\n\t\"headers\": {\r\n\t\t\"x-rapidapi-host\": \"free-nba.p.rapidapi.com\",\r\n\t\t\"x-rapidapi-key\": \"a840bd129amshc11fafac1946f1fp1bbcd7jsn69488be18e23\"\r\n\t}\r\n});\r\n\r\n    \r\n\r\n    let data = await raw_data1.json();\r\n    let data2 = await raw_data2.json();\r\n    console.log(data2);\r\n\r\n    let countries = Array.from(new Set(data.map((d) => {return d.country+\" \"+d.year;})));\r\n    let divorces = Array.from(new Set(data.map((d) => {return d.divorce;})));\r\n\r\n    let datas = data2[\"data\"];\r\n    let players = [];\r\n    let pts = [];\r\n    \r\n    for(var i = 0; i<datas.length; i++){\r\n        let obj = datas[i][\"player\"];\r\n        players[i] = obj[\"first_name\"];\r\n        pts[i]= datas[i][\"pts\"];\r\n\r\n\r\n    }\r\n    let obj = datas[2][\"team\"][\"full_name\"];\r\n    let obj1 = datas[20][\"team\"][[\"full_name\"]];\r\n    let play = obj+\" - \"+obj1;\r\n\r\n    let players_countries =players.concat(countries);\r\n\r\n     var salto = [];\r\n    for(var i = 0; i<players.length;i++){\r\n        salto[i] = 0;\r\n    }\r\n    divorces = salto.concat(divorces);\r\n    \r\n\r\n\r\n    \r\n   \r\n\r\n    Highcharts.chart('container', {\r\n    chart: {\r\n        type: 'column'\r\n    },\r\n    title: {\r\n        text: 'Número de divorcios por paises y puntos anotados por cada jugador del partido '+play+' de la NBA'\r\n    },\r\n    subtitle: {\r\n        text: 'Para visualizar uno de los datos solo seleccione el campo a eliminar.'\r\n    },\r\n    xAxis: {\r\n        categories: players_countries,\r\n        crosshair: true\r\n    },\r\n    yAxis: {\r\n     //   tickInterval: 10,\r\n        min: 0,\r\n        title: {\r\n            text: 'Nº de divorcios y puntos anotados por cada jugador del partido '+play+' de la NBA'\r\n        }\r\n    },\r\n    tooltip: {\r\n        headerFormat: '<span style=\"font-size:10px\">{point.key}</span><table>',\r\n        pointFormat: '<tr><td style=\"color:{series.color};padding:0\">{series.name}: </td>' +\r\n            '<td style=\"padding:0\"><b>{point.y:.0f} </b></td></tr>',\r\n        footerFormat: '</table>',\r\n        shared: true,\r\n        useHTML: true\r\n    },\r\n    plotOptions: {\r\n        column: {\r\n            pointPadding: 0.2,\r\n            borderWidth: 0\r\n        }\r\n    },\r\n    series: [{\r\n        name:'Número de Divorcios',\r\n        data: divorces\r\n    },\r\n    {\r\n        name: 'Puntos anotados por cada jugador en el partido '+play,\r\n        data: pts\r\n    }\r\n    \r\n    ],\r\n});\r\n}\r\n\r\n\r\n</script>\r\n\r\n<svelte:head><script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n<script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n<script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n<script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load = \"{loadGraph}\"></script>\r\n</svelte:head>\r\n\r\n\r\n\r\n<main>\r\n    <h2>Integración API Externa NBA</h2>\r\n\r\n    <figure class=\"highcharts-figure\">\r\n        <div id=\"container\"></div>\r\n        <p class=\"highcharts-description\">\r\n            Gráfico de columnas que compara el número de divorcios por paises y puntos anotados por cada jugador en un partido de la nba.\r\n            Estos datos no tienen ningún tipo de relación. Para visualizar los puntos elimine los datos de divorcios de la tabla. \r\n        \r\n        </p>\r\n    </figure>\r\n    <div>\r\n<Button outline color=\"secondary\" on:click=\"{pop}\" > <i class=\"fas fa-arrow-circle-left\"></i> Atrás </Button>\r\n</div>\r\n</main>\r\n\r\n<style>.highcharts-figure, .highcharts-data-table table {\r\n    min-width: 310px; \r\n    max-width: 900px;\r\n    margin: 1em auto;\r\n}\r\n\r\n#container {\r\n    height: 700px;\r\n}\r\n\r\n.highcharts-data-table table {\r\n\tfont-family: Verdana, sans-serif;\r\n\tborder-collapse: collapse;\r\n\tborder: 1px solid #EBEBEB;\r\n\tmargin: 10px auto;\r\n\ttext-align: center;\r\n\twidth: 100%;\r\n\tmax-width: 500px;\r\n}\r\n.highcharts-data-table caption {\r\n    padding: 1em 0;\r\n    font-size: 1.2em;\r\n    color: #555;\r\n}\r\n.highcharts-data-table th {\r\n\tfont-weight: 600;\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n    background: #f8f8f8;\r\n}\r\n.highcharts-data-table tr:hover {\r\n    background: #f1f7ff;\r\n}\r\n</style>",
    "<script>\r\n\r\nimport Button from \"sveltestrap/src/Button.svelte\";\r\nimport  {pop} from \"svelte-spa-router\";\r\n\r\n\r\n\r\nasync function loadGraph(){\r\n\r\n\r\n    const raw_data1 = await fetch(\"/api/v2/global-divorces\");\r\n    const raw_data2 = await fetch(\"/api/v3/sugarconsume\");\r\n\r\n    let data = await raw_data1.json();\r\n    let data2 = await raw_data2.json();\r\n\r\n\r\n    let countries = Array.from(new Set(data.map((d) => {return d.country+\" \"+d.year;})));\r\n    let divorces = Array.from(new Set(data.map((d) => {return d.divorce;})));\r\n\r\n\r\n    let place = Array.from(new Set(data2.map(t => {return t.place+\" \"+t.year;})));\r\n    let sugar = data2.map(t => {return t.sugarconsume;});\r\n\r\n    let place_countries = place.concat(countries);\r\n\r\n     var salto = [];\r\n    for(var i = 0; i<place.length;i++){\r\n        salto[i] = 0;\r\n    }\r\n    divorces = salto.concat(divorces);\r\n    \r\n    console.log(\"ARRAY \"+place_countries);\r\n\r\n\r\n    \r\n   \r\n\r\n    Highcharts.chart('container', {\r\n    chart: {\r\n        type: 'column'\r\n    },\r\n    title: {\r\n        text: 'Número de divorcios por paises y consumo de azúcar'\r\n    },\r\n    subtitle: {\r\n        text: 'Para visualizar uno de los datos solo seleccione el campo a eliminar.'\r\n    },\r\n    xAxis: {\r\n        categories: place_countries,\r\n        crosshair: true\r\n    },\r\n    yAxis: {\r\n     //   tickInterval: 10,\r\n        min: 0,\r\n        title: {\r\n            text: 'Nº de divorcios y de toneladas de azúcar'\r\n        }\r\n    },\r\n    tooltip: {\r\n        headerFormat: '<span style=\"font-size:10px\">{point.key}</span><table>',\r\n        pointFormat: '<tr><td style=\"color:{series.color};padding:0\">{series.name}: </td>' +\r\n            '<td style=\"padding:0\"><b>{point.y:.0f} </b></td></tr>',\r\n        footerFormat: '</table>',\r\n        shared: true,\r\n        useHTML: true\r\n    },\r\n    plotOptions: {\r\n        column: {\r\n            pointPadding: 0.2,\r\n            borderWidth: 0\r\n        }\r\n    },\r\n    series: [{\r\n        name:'Número de Divorcios',\r\n        data: divorces\r\n    },\r\n    {\r\n        name: 'Número de toneladas de azucar',\r\n        data: sugar\r\n    }\r\n    \r\n    ],\r\n});\r\n}\r\n\r\n\r\n</script>\r\n\r\n<svelte:head><script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n<script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n<script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n<script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load = \"{loadGraph}\"></script>\r\n</svelte:head>\r\n\r\n\r\n\r\n<main>\r\n    <h2>Integración API Consumo de Azúcar</h2>\r\n\r\n    <figure class=\"highcharts-figure\">\r\n        <div id=\"container\"></div>\r\n        <p class=\"highcharts-description\">\r\n            Gráfico de columnas que compara el número de divorcios por paises y años con el consumo en toneladas de azúcar.\r\n            Estos datos no tienen ningún tipo de relación. \r\n        \r\n        </p>\r\n    </figure>\r\n    <div>\r\n<Button outline color=\"secondary\" on:click=\"{pop}\" > <i class=\"fas fa-arrow-circle-left\"></i> Atrás </Button>\r\n</div>\r\n</main>\r\n\r\n<style>.highcharts-figure, .highcharts-data-table table {\r\n    min-width: 310px; \r\n    max-width: 900px;\r\n    margin: 1em auto;\r\n}\r\n\r\n#container {\r\n    height: 700px;\r\n}\r\n\r\n.highcharts-data-table table {\r\n\tfont-family: Verdana, sans-serif;\r\n\tborder-collapse: collapse;\r\n\tborder: 1px solid #EBEBEB;\r\n\tmargin: 10px auto;\r\n\ttext-align: center;\r\n\twidth: 100%;\r\n\tmax-width: 500px;\r\n}\r\n.highcharts-data-table caption {\r\n    padding: 1em 0;\r\n    font-size: 1.2em;\r\n    color: #555;\r\n}\r\n.highcharts-data-table th {\r\n\tfont-weight: 600;\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n    background: #f8f8f8;\r\n}\r\n.highcharts-data-table tr:hover {\r\n    background: #f1f7ff;\r\n}\r\n</style>",
    "<script>\r\n\r\nimport Button from \"sveltestrap/src/Button.svelte\";\r\nimport  {pop} from \"svelte-spa-router\";\r\n\r\n\r\n\r\nasync function loadGraph(){\r\n\r\n\r\n    const raw_data1 = await fetch(\"/api/v2/global-divorces\");\r\n    const raw_data2 = await fetch(\"/api/v3/global-transfers\");\r\n\r\n    let data = await raw_data1.json();\r\n    let data2 = await raw_data2.json();\r\n\r\n\r\n    let countries = Array.from(new Set(data.map((d) => {return d.country+\" \"+d.year;})));\r\n    let divorces = Array.from(new Set(data.map((d) => {return d.divorce;})));\r\n\r\n\r\n   \r\n\r\n    let teams = Array.from(new Set(data2.map(t => {return t.team + \" \" + t.year;})));\r\n    let signing = Array.from(new Set(data2.map(t => {return t.signing;})));\r\n\r\n    let teams_countries =teams.concat(countries);\r\n\r\n     var salto = [];\r\n    for(var i = 0; i<teams.length;i++){\r\n        salto[i] = 0;\r\n    }\r\n    divorces = salto.concat(divorces);\r\n    \r\n    console.log(\"ARRAY \"+teams_countries);\r\n\r\n\r\n    \r\n   \r\n\r\n    Highcharts.chart('container', {\r\n    chart: {\r\n        type: 'column'\r\n    },\r\n    title: {\r\n        text: 'Número de divorcios por paises y fichajes por equipo de fútbol'\r\n    },\r\n    subtitle: {\r\n        text: 'Para visualizar los datos de los fichajes desactive los divorcios.'\r\n    },\r\n    xAxis: {\r\n        categories: teams_countries,\r\n        crosshair: true\r\n    },\r\n    yAxis: {\r\n     //   tickInterval: 10,\r\n        min: 0,\r\n        title: {\r\n            text: 'Nº de divorcios y de fichajes'\r\n        }\r\n    },\r\n    tooltip: {\r\n        headerFormat: '<span style=\"font-size:10px\">{point.key}</span><table>',\r\n        pointFormat: '<tr><td style=\"color:{series.color};padding:0\">{series.name}: </td>' +\r\n            '<td style=\"padding:0\"><b>{point.y:.0f} </b></td></tr>',\r\n        footerFormat: '</table>',\r\n        shared: true,\r\n        useHTML: true\r\n    },\r\n    plotOptions: {\r\n        column: {\r\n            pointPadding: 0.2,\r\n            borderWidth: 0\r\n        }\r\n    },\r\n    series: [{\r\n        name:'Número de Divorcios',\r\n        data: divorces\r\n    },\r\n    {\r\n        name: 'Número de fichajes',\r\n        data: signing\r\n    }\r\n    \r\n    ],\r\n});\r\n}\r\n\r\n\r\n</script>\r\n\r\n<svelte:head><script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n<script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n<script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n<script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load = \"{loadGraph}\"></script>\r\n</svelte:head>\r\n\r\n\r\n\r\n<main>\r\n    <h2>Integración API Fichajes</h2>\r\n\r\n    <figure class=\"highcharts-figure\">\r\n        <div id=\"container\"></div>\r\n        <p class=\"highcharts-description\">\r\n            Gráfico de columnas que compara el número de divorcios por paises y años con el número de ficahjes de equipos de fútbol.\r\n            Estos datos no tienen ningún tipo de relación. \r\n            Debido al alto número de divorcios, los fichajes no se aprecian en la gráfica, por lo que para visualizarlos hay que\r\n            desactivar los divorcios de la gráfica pinchando en número de divorcios.\r\n        </p>\r\n    </figure>\r\n    <div>\r\n<Button outline color=\"secondary\" on:click=\"{pop}\" > <i class=\"fas fa-arrow-circle-left\"></i> Atrás </Button>\r\n</div>\r\n</main>\r\n\r\n<style>.highcharts-figure, .highcharts-data-table table {\r\n    min-width: 310px; \r\n    max-width: 900px;\r\n    margin: 1em auto;\r\n}\r\n\r\n#container {\r\n    height: 700px;\r\n}\r\n\r\n.highcharts-data-table table {\r\n\tfont-family: Verdana, sans-serif;\r\n\tborder-collapse: collapse;\r\n\tborder: 1px solid #EBEBEB;\r\n\tmargin: 10px auto;\r\n\ttext-align: center;\r\n\twidth: 100%;\r\n\tmax-width: 500px;\r\n}\r\n.highcharts-data-table caption {\r\n    padding: 1em 0;\r\n    font-size: 1.2em;\r\n    color: #555;\r\n}\r\n.highcharts-data-table th {\r\n\tfont-weight: 600;\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n    background: #f8f8f8;\r\n}\r\n.highcharts-data-table tr:hover {\r\n    background: #f1f7ff;\r\n}\r\n</style>",
    "<script>\r\n\r\nimport Button from \"sveltestrap/src/Button.svelte\";\r\nimport  {pop} from \"svelte-spa-router\";\r\n\r\n\r\n\r\nasync function loadGraph(){\r\n\r\n\r\n    const raw_data1 = await fetch(\"/api/v2/global-divorces\");\r\n    const raw_data2 = await fetch(\"/api/v2/univregs-stats\");\r\n\r\n    let data = await raw_data1.json();\r\n    let data2 = await raw_data2.json();\r\n\r\n\r\n    let countries = Array.from(new Set(data.map((d) => {return d.country+\" \"+d.year;})));\r\n    let divorces = Array.from(new Set(data.map((d) => {return d.divorce;})));\r\n\r\n\r\n   \r\n\r\n    let comunidades = Array.from(new Set(data2.map(t => {return t.community;})));\r\n    let univreg_gob = Array.from(new Set(data2.map(t => {return t.univreg_gob;})));\r\n\r\n    let community_countries =comunidades.concat(countries);\r\n\r\n     var salto = [];\r\n    for(var i = 0; i<comunidades.length;i++){\r\n        salto[i] = 0;\r\n    }\r\n    divorces = salto.concat(divorces);\r\n    \r\n    console.log(\"ARRAY \"+community_countries);\r\n\r\n\r\n    \r\n   \r\n\r\n    Highcharts.chart('container', {\r\n    chart: {\r\n        type: 'column'\r\n    },\r\n    title: {\r\n        text: 'Número de divorcios por paises y peticiones universitarias'\r\n    },\r\n    subtitle: {\r\n        text: 'Para visualizar uno de los datos solo seleccione el campo a eliminar.'\r\n    },\r\n    xAxis: {\r\n        categories: community_countries,\r\n        crosshair: true\r\n    },\r\n    yAxis: {\r\n     //   tickInterval: 10,\r\n        min: 0,\r\n        title: {\r\n            text: 'Nº de divorcios y de solicitudes universitarias'\r\n        }\r\n    },\r\n    tooltip: {\r\n        headerFormat: '<span style=\"font-size:10px\">{point.key}</span><table>',\r\n        pointFormat: '<tr><td style=\"color:{series.color};padding:0\">{series.name}: </td>' +\r\n            '<td style=\"padding:0\"><b>{point.y:.0f} </b></td></tr>',\r\n        footerFormat: '</table>',\r\n        shared: true,\r\n        useHTML: true\r\n    },\r\n    plotOptions: {\r\n        column: {\r\n            pointPadding: 0.2,\r\n            borderWidth: 0\r\n        }\r\n    },\r\n    series: [{\r\n        name:'Número de Divorcios',\r\n        data: divorces\r\n    },\r\n    {\r\n        name: 'Número de peticiones universitarias',\r\n        data: univreg_gob\r\n    }\r\n    \r\n    ],\r\n});\r\n}\r\n\r\n\r\n</script>\r\n\r\n<svelte:head><script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n<script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n<script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n<script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load = \"{loadGraph}\"></script>\r\n</svelte:head>\r\n\r\n\r\n\r\n<main>\r\n    <h2>Integración API Peticiones universitarias</h2>\r\n\r\n    <figure class=\"highcharts-figure\">\r\n        <div id=\"container\"></div>\r\n        <p class=\"highcharts-description\">\r\n            Gráfico de columnas que compara el número de divorcios por paises y años con el número de peticiones universitarias.\r\n            Estos datos no tienen ningún tipo de relación. \r\n        \r\n        </p>\r\n    </figure>\r\n    <div>\r\n<Button outline color=\"secondary\" on:click=\"{pop}\" > <i class=\"fas fa-arrow-circle-left\"></i> Atrás </Button>\r\n</div>\r\n</main>\r\n\r\n<style>.highcharts-figure, .highcharts-data-table table {\r\n    min-width: 310px; \r\n    max-width: 900px;\r\n    margin: 1em auto;\r\n}\r\n\r\n#container {\r\n    height: 700px;\r\n}\r\n\r\n.highcharts-data-table table {\r\n\tfont-family: Verdana, sans-serif;\r\n\tborder-collapse: collapse;\r\n\tborder: 1px solid #EBEBEB;\r\n\tmargin: 10px auto;\r\n\ttext-align: center;\r\n\twidth: 100%;\r\n\tmax-width: 500px;\r\n}\r\n.highcharts-data-table caption {\r\n    padding: 1em 0;\r\n    font-size: 1.2em;\r\n    color: #555;\r\n}\r\n.highcharts-data-table th {\r\n\tfont-weight: 600;\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n    background: #f8f8f8;\r\n}\r\n.highcharts-data-table tr:hover {\r\n    background: #f1f7ff;\r\n}\r\n</style>",
    "<script>\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n    import  {pop} from \"svelte-spa-router\";\t\r\n\r\n\r\n    \r\n    const URL_BASE = \"api/v3/global-marriages\";\r\n       \r\n    async function loadGraph(){\r\n    \r\n\r\n        //Mis datos\r\n    const resData = await fetch(URL_BASE);\r\n    let MyData = await resData.json();\r\n    \r\n    let countries = Array.from(new Set(MyData.map((d) => {return d.country+\" \"+d.year;})));\r\n    let avg_ms = Array.from(new Set(MyData.map((d) => {return d.avg_m;})));\r\n    let avg_wms = Array.from(new Set(MyData.map((d) => {return d.avg_wms;})));\r\n    let marriages = Array.from(new Set(MyData.map((d) => {return d.marriages;})));\r\n    \r\n    \r\n    //Integracion con el grupo 01\r\n    const URL_BASE_grupo_01 = \"/api/v2/emigrants-stats\";\r\n    console.log(\"fetch a \" + URL_BASE_grupo_01);\r\n    const resData_4 = await fetch(URL_BASE_grupo_01);\r\n    let MyData_4 = await resData_4.json();\r\n    let avg_4 = Array.from(new Set(MyData_4.map((d) => {return d.em_totals;})));\r\n    console.log(\"Datos emigrantes Antonio :\");\r\n    console.log(avg_4);\r\n\r\n    \r\n    Highcharts.chart('container', {\r\n        chart: {\r\n            type: 'bar'\r\n        },\r\n        title: {\r\n            text: 'Relacion entre matrimonios  y numero de emigrantes.'\r\n        },\r\n      \r\n        xAxis: {\r\n            categories: countries,\r\n            title: {\r\n                text: null\r\n            }\r\n        },\r\n        yAxis: {\r\n            min: 0,\r\n            title: {\r\n                text: 'Matrimonios/Emigrantes',\r\n                align: 'high'\r\n            },\r\n            labels: {\r\n                overflow: 'justify'\r\n            }\r\n        },\r\n        tooltip: {\r\n            valueSuffix: 'Personas'\r\n        },\r\n        plotOptions: {\r\n            bar: {\r\n                dataLabels: {\r\n                    enabled: true\r\n                }\r\n            }\r\n        },\r\n        legend: {\r\n            layout: 'vertical',\r\n            align: 'right',\r\n            verticalAlign: 'top',\r\n            x: -40,\r\n            y: 350,\r\n            floating: true,\r\n            borderWidth: 1,\r\n            backgroundColor:\r\n                Highcharts.defaultOptions.legend.backgroundColor || '#FFFFFF',\r\n            shadow: true\r\n        },\r\n        credits: {\r\n            enabled: false\r\n        },\r\n        series: [{\r\n            name: 'Matrimonios',\r\n            data: marriages\r\n        }, {\r\n            name: 'Emigrantes',\r\n            data: avg_4\r\n        }]\r\n    });\r\n    }\r\n\r\n\r\n    \r\n    </script>\r\n    \r\n    <svelte:head>\r\n        <script src=\"https://code.highcharts.com/highcharts.js\" defer></script>\r\n        <script src=\"https://code.highcharts.com/modules/series-label.js\"  defer></script>\r\n        <script src=\"https://code.highcharts.com/modules/exporting.js\"  defer></script>\r\n        <script src=\"https://code.highcharts.com/modules/export-data.js\"  defer></script>\r\n        <script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\" defer></script>\r\n    </svelte:head>\r\n    \r\n    <main>\r\n        <h2>Integraciones con SOS1920</h2>\r\n        <Button color=\"info\" on:click=\"{pop}\">Atrás</Button>\r\n        <figure class=\"highcharts-figure\">\r\n            <div id=\"container\"></div>\r\n            <p class=\"highcharts-description\">\r\n                Se muestran los datos de emigrantes del grupo 01 junto con los datos de matrimonios registrados.\r\n            </p>\r\n        </figure>\r\n\r\n    \r\n\r\n\r\n    </main>\r\n    \r\n    <style>\r\n    .highcharts-figure, .highcharts-data-table table {\r\n        min-width: 310px; \r\n        max-width: 1000px;\r\n        margin: 1em auto;\r\n    }\r\n    \r\n    #container {\r\n        height: 1000px;\r\n    }\r\n    \r\n    .highcharts-data-table table {\r\n        font-family: Verdana, sans-serif;\r\n        border-collapse: collapse;\r\n        border: 1px solid #EBEBEB;\r\n        margin: 10px auto;\r\n        text-align: center;\r\n        width: 100%;\r\n        max-width: 500px;\r\n    }\r\n    .highcharts-data-table caption {\r\n        padding: 1em 0;\r\n        font-size: 1.2em;\r\n        color: #555;\r\n    }\r\n    .highcharts-data-table th {\r\n        font-weight: 600;\r\n        padding: 0.5em;\r\n    }\r\n    .highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n        padding: 0.5em;\r\n    }\r\n    .highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n        background: #f8f8f8;\r\n    }\r\n    .highcharts-data-table tr:hover {\r\n        background: #f1f7ff;\r\n    }\r\n    </style>",
    "<script>\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n    import  {pop} from \"svelte-spa-router\";\t\r\n\r\n\r\n    \r\n    const URL_BASE = \"api/v3/global-marriages\";\r\n       \r\n    async function loadGraph(){\r\n    \r\n\r\n        //Mis datos\r\n    const resData = await fetch(URL_BASE);\r\n    let MyData = await resData.json();\r\n    \r\n    let countries = Array.from(new Set(MyData.map((d) => {return d.country+\" \"+d.year;})));\r\n    let avg_ms = Array.from(new Set(MyData.map((d) => {return d.avg_m;})));\r\n    let avg_wms = Array.from(new Set(MyData.map((d) => {return d.avg_wms;})));\r\n    let marriages = Array.from(new Set(MyData.map((d) => {return d.marriages;})));\r\n    \r\n    \r\n    // Datos del grupo 5\r\n    const URL_BASE_grupo_05 = \"/api/v1/books-exports\";\r\n    const resData_2 = await fetch(URL_BASE_grupo_05);\r\n    console.log(\"fetch a \" + URL_BASE_grupo_05);\r\n    let MyData_2 = await resData_2.json();\r\n    let avg_2 = Array.from(new Set(MyData_2.map((d) => {return d.exp_book;})));\r\n    console.log(\"Datos libros exportados Diego:\");\r\n    console.log(avg_2);\r\n\r\n    \r\n    Highcharts.chart('container', {\r\n        chart: {\r\n            type: 'bar'\r\n        },\r\n        title: {\r\n            text: 'Relacion libros exportados  y matrimonios registrados.'\r\n        },\r\n      \r\n        xAxis: {\r\n            categories: countries,\r\n            title: {\r\n                text: null\r\n            }\r\n        },\r\n        yAxis: {\r\n            min: 0,\r\n            title: {\r\n                text: 'Matrimonios/Libros',\r\n                align: 'high'\r\n            },\r\n            labels: {\r\n                overflow: 'justify'\r\n            }\r\n        },\r\n        tooltip: {\r\n            valueSuffix: 'Personas'\r\n        },\r\n        plotOptions: {\r\n            bar: {\r\n                dataLabels: {\r\n                    enabled: true\r\n                }\r\n            }\r\n        },\r\n        legend: {\r\n            layout: 'vertical',\r\n            align: 'right',\r\n            verticalAlign: 'top',\r\n            x: -40,\r\n            y: 350,\r\n            floating: true,\r\n            borderWidth: 1,\r\n            backgroundColor:\r\n                Highcharts.defaultOptions.legend.backgroundColor || '#FFFFFF',\r\n            shadow: true\r\n        },\r\n        credits: {\r\n            enabled: false\r\n        },\r\n        series: [{\r\n            name: 'Matrimonios',\r\n            data: marriages\r\n        }, {\r\n            name: 'Libros Exportados',\r\n            data: avg_2\r\n        }]\r\n    });\r\n    }\r\n\r\n\r\n    \r\n    </script>\r\n    \r\n    <svelte:head>\r\n        <script src=\"https://code.highcharts.com/highcharts.js\" defer></script>\r\n        <script src=\"https://code.highcharts.com/modules/series-label.js\"  defer></script>\r\n        <script src=\"https://code.highcharts.com/modules/exporting.js\"  defer></script>\r\n        <script src=\"https://code.highcharts.com/modules/export-data.js\"  defer></script>\r\n        <script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\" defer></script>\r\n    </svelte:head>\r\n    \r\n    <main>\r\n        <h2>Integraciones con SOS1920</h2>\r\n        <Button color=\"info\" on:click=\"{pop}\">Atrás</Button>\r\n        <figure class=\"highcharts-figure\">\r\n            <div id=\"container\"></div>\r\n            <p class=\"highcharts-description\">\r\n                Se muestran los datos de libros exportados del grupo 05 junto con los datos de matrimonios registrados.\r\n            </p>\r\n        </figure>\r\n\r\n    \r\n\r\n\r\n    </main>\r\n    \r\n    <style>\r\n    .highcharts-figure, .highcharts-data-table table {\r\n        min-width: 310px; \r\n        max-width: 1000px;\r\n        margin: 1em auto;\r\n    }\r\n    \r\n    #container {\r\n        height: 1000px;\r\n    }\r\n    \r\n    .highcharts-data-table table {\r\n        font-family: Verdana, sans-serif;\r\n        border-collapse: collapse;\r\n        border: 1px solid #EBEBEB;\r\n        margin: 10px auto;\r\n        text-align: center;\r\n        width: 100%;\r\n        max-width: 500px;\r\n    }\r\n    .highcharts-data-table caption {\r\n        padding: 1em 0;\r\n        font-size: 1.2em;\r\n        color: #555;\r\n    }\r\n    .highcharts-data-table th {\r\n        font-weight: 600;\r\n        padding: 0.5em;\r\n    }\r\n    .highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n        padding: 0.5em;\r\n    }\r\n    .highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n        background: #f8f8f8;\r\n    }\r\n    .highcharts-data-table tr:hover {\r\n        background: #f1f7ff;\r\n    }\r\n    </style>",
    "<script>\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n    import  {pop} from \"svelte-spa-router\";\t\r\n\r\n\r\n    \r\n    const URL_BASE = \"api/v3/global-marriages\";\r\n       \r\n    async function loadGraph(){\r\n    \r\n\r\n        //Mis datos\r\n    const resData = await fetch(URL_BASE);\r\n    let MyData = await resData.json();\r\n    \r\n    let countries = Array.from(new Set(MyData.map((d) => {return d.country+\" \"+d.year;})));\r\n    let avg_ms = Array.from(new Set(MyData.map((d) => {return d.avg_m;})));\r\n    let avg_wms = Array.from(new Set(MyData.map((d) => {return d.avg_wms;})));\r\n    let marriages = Array.from(new Set(MyData.map((d) => {return d.marriages;})));\r\n    \r\n    \r\n   //Integracion con el grupo 21\r\n   const URL_BASE_grupo_21 = \"/api/v2/traffic-injuries\";\r\n    console.log(\"fetch a \" + URL_BASE_grupo_21);\r\n    const resData_3 = await fetch(URL_BASE_grupo_21);\r\n    let MyData_3 = await resData_3.json();\r\n    let avg_3 = Array.from(new Set(MyData_3.map((d) => {return d.accident;})));\r\n    let accidents=[]\r\n    let max=marriages.length\r\n    for (let index = 0; index < max; index++) {\r\n        accidents.push(avg_3[index])\r\n        \r\n    }\r\n\r\n        \r\n\r\n    console.log(\"Datos accidentes Juan:\");\r\n    console.log(accidents)\r\n    \r\n    Highcharts.chart('container', {\r\n        chart: {\r\n            type: 'bar'\r\n        },\r\n        title: {\r\n            text: 'Relacion accidentes de trafico  y matrimonios registrados.'\r\n        },\r\n      \r\n        xAxis: {\r\n            categories: countries,\r\n            title: {\r\n                text: null\r\n            }\r\n        },\r\n        yAxis: {\r\n            min: 0,\r\n            title: {\r\n                text: 'Matrimonios/Accidentes',\r\n                align: 'high'\r\n            },\r\n            labels: {\r\n                overflow: 'justify'\r\n            }\r\n        },\r\n        tooltip: {\r\n            valueSuffix: 'Personas'\r\n        },\r\n        plotOptions: {\r\n            bar: {\r\n                dataLabels: {\r\n                    enabled: true\r\n                }\r\n            }\r\n        },\r\n        legend: {\r\n            layout: 'vertical',\r\n            align: 'right',\r\n            verticalAlign: 'top',\r\n            x: -40,\r\n            y: 350,\r\n            floating: true,\r\n            borderWidth: 1,\r\n            backgroundColor:\r\n                Highcharts.defaultOptions.legend.backgroundColor || '#FFFFFF',\r\n            shadow: true\r\n        },\r\n        credits: {\r\n            enabled: false\r\n        },\r\n        series: [{\r\n            name: 'Matrimonios',\r\n            data: marriages\r\n        }, {\r\n            name: 'Accidentes trafico',\r\n            data: accidents\r\n        }]\r\n    });\r\n    }\r\n\r\n\r\n    \r\n    </script>\r\n    \r\n    <svelte:head>\r\n        <script src=\"https://code.highcharts.com/highcharts.js\" defer></script>\r\n        <script src=\"https://code.highcharts.com/modules/series-label.js\"  defer></script>\r\n        <script src=\"https://code.highcharts.com/modules/exporting.js\"  defer></script>\r\n        <script src=\"https://code.highcharts.com/modules/export-data.js\"  defer></script>\r\n        <script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\" defer></script>\r\n    </svelte:head>\r\n    \r\n    <main>\r\n        <h2>Integraciones con SOS1920</h2>\r\n        <Button color=\"info\" on:click=\"{pop}\">Atrás</Button>\r\n        <figure class=\"highcharts-figure\">\r\n            <div id=\"container\"></div>\r\n            <p class=\"highcharts-description\">\r\n                Se muestran los datos de accidentes de trafico del grupo 21 junto con los datos de matrimonios registrados.\r\n            </p>\r\n        </figure>\r\n\r\n    \r\n\r\n\r\n    </main>\r\n    \r\n    <style>\r\n    .highcharts-figure, .highcharts-data-table table {\r\n        min-width: 310px; \r\n        max-width: 1000px;\r\n        margin: 1em auto;\r\n    }\r\n    \r\n    #container {\r\n        height: 1000px;\r\n    }\r\n    \r\n    .highcharts-data-table table {\r\n        font-family: Verdana, sans-serif;\r\n        border-collapse: collapse;\r\n        border: 1px solid #EBEBEB;\r\n        margin: 10px auto;\r\n        text-align: center;\r\n        width: 100%;\r\n        max-width: 500px;\r\n    }\r\n    .highcharts-data-table caption {\r\n        padding: 1em 0;\r\n        font-size: 1.2em;\r\n        color: #555;\r\n    }\r\n    .highcharts-data-table th {\r\n        font-weight: 600;\r\n        padding: 0.5em;\r\n    }\r\n    .highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n        padding: 0.5em;\r\n    }\r\n    .highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n        background: #f8f8f8;\r\n    }\r\n    .highcharts-data-table tr:hover {\r\n        background: #f1f7ff;\r\n    }\r\n    </style>",
    "<script>\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n    import  {pop} from \"svelte-spa-router\";\t\r\n\r\n\r\n    \r\n    const URL_BASE = \"api/v3/global-marriages\";\r\n       \r\n    async function loadGraph(){\r\n    \r\n\r\n        //Mis datos\r\n    const resData = await fetch(URL_BASE);\r\n    let MyData = await resData.json();\r\n    \r\n    let countries = Array.from(new Set(MyData.map((d) => {return d.country+\" \"+d.year;})));\r\n    let avg_ms = Array.from(new Set(MyData.map((d) => {return d.avg_m;})));\r\n    let avg_wms = Array.from(new Set(MyData.map((d) => {return d.avg_wms;})));\r\n    let marriages = Array.from(new Set(MyData.map((d) => {return d.marriages;})));\r\n    \r\n\r\n    //Integracion con el grupo 26 a traves de proxy\r\n    const URL_BASE_grupo_26 = \"/api/v3/global-coef\";\r\n    const resData_1 = await fetch(URL_BASE_grupo_26);\r\n    console.log(\"fetch a \" + URL_BASE_grupo_26);\r\n    let MyData_1 = await resData_1.json();\r\n    let avg_1 = Array.from(new Set(MyData_1.map((d) => {return d.fed;})));\r\n    console.log(\"Datos equipos Creus:\");\r\n    console.log(avg_1);\r\n\r\n    \r\n    Highcharts.chart('container', {\r\n        chart: {\r\n            type: 'bar'\r\n        },\r\n        title: {\r\n            text: 'Relacion FED y Media hombres.'\r\n        },\r\n      \r\n        xAxis: {\r\n            categories: countries,\r\n            title: {\r\n                text: null\r\n            }\r\n        },\r\n        yAxis: {\r\n            min: 0,\r\n            title: {\r\n                text: 'Media hombres/fed',\r\n                align: 'high'\r\n            },\r\n            labels: {\r\n                overflow: 'justify'\r\n            }\r\n        },\r\n        tooltip: {\r\n            valueSuffix: 'Personas'\r\n        },\r\n        plotOptions: {\r\n            bar: {\r\n                dataLabels: {\r\n                    enabled: true\r\n                }\r\n            }\r\n        },\r\n        legend: {\r\n            layout: 'vertical',\r\n            align: 'right',\r\n            verticalAlign: 'top',\r\n            x: -40,\r\n            y: 350,\r\n            floating: true,\r\n            borderWidth: 1,\r\n            backgroundColor:\r\n                Highcharts.defaultOptions.legend.backgroundColor || '#FFFFFF',\r\n            shadow: true\r\n        },\r\n        credits: {\r\n            enabled: false\r\n        },\r\n        series: [{\r\n            name: 'Hombres',\r\n            data: avg_ms\r\n        }, {\r\n            name: 'Fed',\r\n            data: avg_1\r\n        }]\r\n    });\r\n    }\r\n\r\n\r\n    \r\n    </script>\r\n    \r\n    <svelte:head>\r\n        <script src=\"https://code.highcharts.com/highcharts.js\" defer></script>\r\n        <script src=\"https://code.highcharts.com/modules/series-label.js\"  defer></script>\r\n        <script src=\"https://code.highcharts.com/modules/exporting.js\"  defer></script>\r\n        <script src=\"https://code.highcharts.com/modules/export-data.js\"  defer></script>\r\n        <script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\" defer></script>\r\n    </svelte:head>\r\n    \r\n    <main>\r\n        <h2>Integraciones con SOS1920</h2>\r\n        <Button color=\"info\" on:click=\"{pop}\">Atrás</Button>\r\n        <figure class=\"highcharts-figure\">\r\n            <div id=\"container\"></div>\r\n            <p class=\"highcharts-description\">\r\n                Se muestran los datos de fed del grupo 26 junto con los datos de la media de los hombres.\r\n            </p>\r\n        </figure>\r\n\r\n    \r\n\r\n\r\n    </main>\r\n    \r\n    <style>\r\n    .highcharts-figure, .highcharts-data-table table {\r\n        min-width: 310px; \r\n        max-width: 1000px;\r\n        margin: 1em auto;\r\n    }\r\n    \r\n    #container {\r\n        height: 1000px;\r\n    }\r\n    \r\n    .highcharts-data-table table {\r\n        font-family: Verdana, sans-serif;\r\n        border-collapse: collapse;\r\n        border: 1px solid #EBEBEB;\r\n        margin: 10px auto;\r\n        text-align: center;\r\n        width: 100%;\r\n        max-width: 500px;\r\n    }\r\n    .highcharts-data-table caption {\r\n        padding: 1em 0;\r\n        font-size: 1.2em;\r\n        color: #555;\r\n    }\r\n    .highcharts-data-table th {\r\n        font-weight: 600;\r\n        padding: 0.5em;\r\n    }\r\n    .highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n        padding: 0.5em;\r\n    }\r\n    .highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n        background: #f8f8f8;\r\n    }\r\n    .highcharts-data-table tr:hover {\r\n        background: #f1f7ff;\r\n    }\r\n    </style>",
    "<script>\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n    import  {pop} from \"svelte-spa-router\";\t\r\n\r\n\r\n    \r\n    const URL_BASE = \"api/v3/global-marriages\";\r\n       \r\n    async function loadGraph(){\r\n    \r\n\r\n        //Mis datos\r\n    const resData = await fetch(URL_BASE);\r\n    let MyData = await resData.json();\r\n    \r\n    let countries = Array.from(new Set(MyData.map((d) => {return d.country+\" \"+d.year;})));\r\n    let avg_ms = Array.from(new Set(MyData.map((d) => {return d.avg_m;})));\r\n    let avg_wms = Array.from(new Set(MyData.map((d) => {return d.avg_wms;})));\r\n    let marriages = Array.from(new Set(MyData.map((d) => {return d.marriages;})));\r\n    console.log(MyData)\r\n    \r\n    //Integracion con la api externa\r\n  \r\n    const resData_4 = await fetch(\"https://restcountries.eu/rest/v2/?fields=name;area\");\r\n    let MyData_4 = await resData_4.json();\r\n    let avg_4 = Array.from(new Set(MyData_4.map((d) => {return d.area;})));\r\n    console.log(\"Datos areas de paises :\");\r\n    console.log(MyData_4);\r\n    let areas=[]\r\n    let max=marriages.length\r\n\r\n    //Para que tengamos el mismo numero de datos y la grafica se pinte \"correctamente\"\r\n    for (let index = 0; index < max; index++) {\r\n        areas.push(avg_4[index])    \r\n    }\r\n    console.log(areas)\r\n\r\n    \r\n    Highcharts.chart('container', {\r\n        chart: {\r\n            type: 'bar'\r\n        },\r\n        title: {\r\n            text: 'Relacion entre matrimonios  y area de los paises.'\r\n        },\r\n      \r\n        xAxis: {\r\n            categories: countries,\r\n            title: {\r\n                text: null\r\n            }\r\n        },\r\n        yAxis: {\r\n            min: 0,\r\n            title: {\r\n                text: 'Matrimonios/Area',\r\n                align: 'high'\r\n            },\r\n            labels: {\r\n                overflow: 'justify'\r\n            }\r\n        },\r\n        tooltip: {\r\n            valueSuffix: 'Personas'\r\n        },\r\n        plotOptions: {\r\n            bar: {\r\n                dataLabels: {\r\n                    enabled: true\r\n                }\r\n            }\r\n        },\r\n        legend: {\r\n            layout: 'vertical',\r\n            align: 'right',\r\n            verticalAlign: 'top',\r\n            x: -40,\r\n            y: 350,\r\n            floating: true,\r\n            borderWidth: 1,\r\n            backgroundColor:\r\n                Highcharts.defaultOptions.legend.backgroundColor || '#FFFFFF',\r\n            shadow: true\r\n        },\r\n        credits: {\r\n            enabled: false\r\n        },\r\n        series: [{\r\n            name: 'Matrimonios',\r\n            data: marriages\r\n        }, {\r\n            name: 'Area',\r\n            data: areas\r\n        }]\r\n    });\r\n    }\r\n\r\n\r\n    \r\n    </script>\r\n    \r\n    <svelte:head>\r\n        <script src=\"https://code.highcharts.com/highcharts.js\" defer></script>\r\n        <script src=\"https://code.highcharts.com/modules/series-label.js\"  defer></script>\r\n        <script src=\"https://code.highcharts.com/modules/exporting.js\"  defer></script>\r\n        <script src=\"https://code.highcharts.com/modules/export-data.js\"  defer></script>\r\n        <script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\" defer></script>\r\n    </svelte:head>\r\n    \r\n    <main>\r\n        <h2>Integraciones con SOS1920</h2>\r\n        <Button color=\"info\" on:click=\"{pop}\">Atrás</Button>\r\n        <figure class=\"highcharts-figure\">\r\n            <div id=\"container\"></div>\r\n            <p class=\"highcharts-description\">\r\n                Se muestran los datos areas de paises de una API externa junto con los datos de matrimonios registrados.\r\n            </p>\r\n        </figure>\r\n\r\n    \r\n\r\n\r\n    </main>\r\n    \r\n    <style>\r\n    .highcharts-figure, .highcharts-data-table table {\r\n        min-width: 310px; \r\n        max-width: 1000px;\r\n        margin: 1em auto;\r\n    }\r\n    \r\n    #container {\r\n        height: 1000px;\r\n    }\r\n    \r\n    .highcharts-data-table table {\r\n        font-family: Verdana, sans-serif;\r\n        border-collapse: collapse;\r\n        border: 1px solid #EBEBEB;\r\n        margin: 10px auto;\r\n        text-align: center;\r\n        width: 100%;\r\n        max-width: 500px;\r\n    }\r\n    .highcharts-data-table caption {\r\n        padding: 1em 0;\r\n        font-size: 1.2em;\r\n        color: #555;\r\n    }\r\n    .highcharts-data-table th {\r\n        font-weight: 600;\r\n        padding: 0.5em;\r\n    }\r\n    .highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n        padding: 0.5em;\r\n    }\r\n    .highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n        background: #f8f8f8;\r\n    }\r\n    .highcharts-data-table tr:hover {\r\n        background: #f1f7ff;\r\n    }\r\n    </style>",
    "<script>\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n    import  {pop} from \"svelte-spa-router\";\t\r\n\r\n\r\n    \r\n    const URL_BASE = \"api/v3/global-marriages\";\r\n       \r\n    async function loadGraph(){\r\n    \r\n\r\n        //Mis datos\r\n    const resData = await fetch(URL_BASE);\r\n    let MyData = await resData.json();\r\n    \r\n    let countries = Array.from(new Set(MyData.map((d) => {return d.country+\" \"+d.year;})));\r\n    let avg_ms = Array.from(new Set(MyData.map((d) => {return d.avg_m;})));\r\n    let avg_wms = Array.from(new Set(MyData.map((d) => {return d.avg_wms;})));\r\n    let marriages = Array.from(new Set(MyData.map((d) => {return d.marriages;})));\r\n    console.log(MyData)\r\n    \r\n    //Integracion con la api externa\r\n  \r\n    const resData_4 = await fetch(\"https://covid-193.p.rapidapi.com/statistics\", {\r\n            \"method\": \"GET\",\r\n            \"headers\": {\r\n                \"x-rapidapi-host\": \"covid-193.p.rapidapi.com\",\r\n                \"x-rapidapi-key\": \"3990991345msh0d2713751056f00p1756fbjsn62042961a8d5\",\r\n                \"useQueryString\": true\r\n            }\r\n        })\r\n    let MyData_4 = await resData_4.json(); //Todos los datos de la respuesta\r\n\r\n    let NewArray= MyData_4.response; // Nos quedamos con la informacion de los casos\r\n\r\n    //Cogemos tantos elementos como tenemos en la grafica\r\n    let covid=[]\r\n    let max=marriages.length\r\n    for (let index = 0; index < max; index++) {\r\n        covid.push(NewArray[index])\r\n        \r\n    }\r\n    console.log(covid)\r\n\r\n    //Nos quedamos solamente con el dato de contagios totales por pais \r\n    let avg_4 = Array.from(new Set(covid.map((d) => {return d.cases.total})));\r\n\r\n    console.log(\"Datos contagiados por paises :\");\r\n    console.log(avg_4)\r\n  \r\n    \r\n    Highcharts.chart('container', {\r\n        chart: {\r\n            type: 'bar'\r\n        },\r\n        title: {\r\n            text: 'Relacion entre matrimonios  y numero de contagiados por covid.'\r\n        },\r\n      \r\n        xAxis: {\r\n            categories: countries,\r\n            title: {\r\n                text: null\r\n            }\r\n        },\r\n        yAxis: {\r\n            min: 0,\r\n            title: {\r\n                text: 'Matrimonios/Contagiados',\r\n                align: 'high'\r\n            },\r\n            labels: {\r\n                overflow: 'justify'\r\n            }\r\n        },\r\n        tooltip: {\r\n            valueSuffix: 'Personas'\r\n        },\r\n        plotOptions: {\r\n            bar: {\r\n                dataLabels: {\r\n                    enabled: true\r\n                }\r\n            }\r\n        },\r\n        legend: {\r\n            layout: 'vertical',\r\n            align: 'right',\r\n            verticalAlign: 'top',\r\n            x: -40,\r\n            y: 350,\r\n            floating: true,\r\n            borderWidth: 1,\r\n            backgroundColor:\r\n                Highcharts.defaultOptions.legend.backgroundColor || '#FFFFFF',\r\n            shadow: true\r\n        },\r\n        credits: {\r\n            enabled: false\r\n        },\r\n        series: [{\r\n            name: 'Matrimonios',\r\n            data: marriages\r\n        }, {\r\n            name: 'Contagiados totales',\r\n            data: avg_4\r\n        }]\r\n    });\r\n    }\r\n\r\n\r\n    \r\n    </script>\r\n    \r\n    <svelte:head>\r\n        <script src=\"https://code.highcharts.com/highcharts.js\" defer></script>\r\n        <script src=\"https://code.highcharts.com/modules/series-label.js\"  defer></script>\r\n        <script src=\"https://code.highcharts.com/modules/exporting.js\"  defer></script>\r\n        <script src=\"https://code.highcharts.com/modules/export-data.js\"  defer></script>\r\n        <script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\" defer></script>\r\n    </svelte:head>\r\n    \r\n    <main>\r\n        <h2>Integraciones con SOS1920</h2>\r\n        <Button color=\"info\" on:click=\"{pop}\">Atrás</Button>\r\n        <figure class=\"highcharts-figure\">\r\n            <div id=\"container\"></div>\r\n            <p class=\"highcharts-description\">\r\n                Se muestran los datos de contagiados de covid  junto con los datos de matrimonios registrados.\r\n            </p>\r\n        </figure>\r\n\r\n    \r\n\r\n\r\n    </main>\r\n    \r\n    <style>\r\n    .highcharts-figure, .highcharts-data-table table {\r\n        min-width: 310px; \r\n        max-width: 1000px;\r\n        margin: 1em auto;\r\n    }\r\n    \r\n    #container {\r\n        height: 1000px;\r\n    }\r\n    \r\n    .highcharts-data-table table {\r\n        font-family: Verdana, sans-serif;\r\n        border-collapse: collapse;\r\n        border: 1px solid #EBEBEB;\r\n        margin: 10px auto;\r\n        text-align: center;\r\n        width: 100%;\r\n        max-width: 500px;\r\n    }\r\n    .highcharts-data-table caption {\r\n        padding: 1em 0;\r\n        font-size: 1.2em;\r\n        color: #555;\r\n    }\r\n    .highcharts-data-table th {\r\n        font-weight: 600;\r\n        padding: 0.5em;\r\n    }\r\n    .highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n        padding: 0.5em;\r\n    }\r\n    .highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n        background: #f8f8f8;\r\n    }\r\n    .highcharts-data-table tr:hover {\r\n        background: #f1f7ff;\r\n    }\r\n    </style>",
    "<script>\r\n\r\nimport Button from \"sveltestrap/src/Button.svelte\";\r\nimport  {pop} from \"svelte-spa-router\";\r\n\r\nconst URL_BASE = \"api/v2/global-suicides\";\r\nconst URL_BASE2 = \"api/v2/global-divorces\";\r\nconst URL_BASE3 = \"api/v3/global-marriages\";\r\n   \r\nasync function loadGraph(){\r\n\r\n    const resData = await fetch(URL_BASE);\r\n    let MyData = await resData.json();\r\n    let suicides_set = MyData.map((d) => {\r\n\t\t\tlet res = {\r\n\t\t\t\tname: d.country+d.year,\r\n\t\t\t\tvalue: d.average\r\n\t\t\t};\r\n\t\t\treturn res;\r\n        });\r\n        console.log(\"Suicidios:\");\r\n        console.log(suicides_set);\r\n\r\n    const resData2 = await fetch(URL_BASE2);\r\n    let MyData2 = await resData2.json();\r\n    let divorces_set = MyData2.map((d) => {\r\n\t\t\tlet res = {\r\n\t\t\t\tname: d.country+d.year,\r\n\t\t\t\tvalue: d.crude_rate\r\n\t\t\t};\r\n\t\t\treturn res;\r\n        });\r\n        console.log(\"Divorcios:\");\r\n        console.log(divorces_set);\r\n\r\n    const resData3 = await fetch(URL_BASE3);\r\n    let MyData3 = await resData3.json();\r\n    let marriages_set = MyData3.map((d) => {\r\n\t\t\tlet res = {\r\n\t\t\t\tname: d.country+d.year,\r\n\t\t\t\tvalue: (d.avg_wm+d.avg_m)/2\r\n\t\t\t};\r\n\t\t\treturn res;\r\n        });\r\n        console.log(\"Matrimonios:\");\r\n        console.log(marriages_set);\r\n\r\n\r\n    Highcharts.chart('container', {\r\n    chart: {\r\n        type: 'packedbubble',\r\n        height: '100%'\r\n    },\r\n    title: {\r\n        text: 'Unión de datos del grupo 10'\r\n    },\r\n    tooltip: {\r\n        useHTML: true,\r\n        pointFormat: '<b>{point.name}:</b> {point.value}*(1/100.000 personas)'\r\n    },\r\n    plotOptions: {\r\n        packedbubble: {\r\n            minSize: '30%',\r\n            maxSize: '120%',\r\n            zMin: 0,\r\n            zMax: 1000,\r\n            layoutAlgorithm: {\r\n                splitSeries: false,\r\n                gravitationalConstant: 0.02\r\n            },\r\n            dataLabels: {\r\n                enabled: true,\r\n                format: '{point.name}',\r\n                filter: {\r\n                    property: 'y',\r\n                    operator: '>',\r\n                    value: 250\r\n                },\r\n                style: {\r\n                    color: 'black',\r\n                    textOutline: 'none',\r\n                    fontWeight: 'normal'\r\n                }\r\n            }\r\n        }\r\n    },\r\n    series: [{\r\n        name: 'Suicidios',\r\n        data: suicides_set\r\n    },\r\n     {\r\n        name: 'Matrimonios',\r\n        data: divorces_set\r\n    }, {\r\n        name: 'Divorcios',\r\n        data: marriages_set\r\n    }]\r\n    });\r\n}\r\n\r\nloadGraph();\r\n\r\n   </script>\r\n\r\n\r\n   \r\n   <main>\r\n       \r\n       <h2>Integración común del grupo SOS1920-10</h2>\r\n       <Button color=\"info\" on:click=\"{pop}\">Atrás</Button>\r\n       <figure class=\"highcharts-figure\">\r\n        <div id=\"container\"></div>\r\n        <p class=\"highcharts-description\">\r\n            Esta gráfica muestra datos de todos los recursos de las 3 apis del grupo.\r\n            El dato de los matrimonios ha sido tratado para unificar una media común: (avg_wm+avg_m)/2.\r\n        </p>\r\n    </figure>\r\n   </main>\r\n\r\n<style>\r\n\r\n.highcharts-figure, .highcharts-data-table table {\r\n    min-width: 320px; \r\n    max-width: 800px;\r\n    margin: 1em auto;\r\n}\r\n\r\n.highcharts-data-table table {\r\n\tfont-family: Verdana, sans-serif;\r\n\tborder-collapse: collapse;\r\n\tborder: 1px solid #EBEBEB;\r\n\tmargin: 10px auto;\r\n\ttext-align: center;\r\n\twidth: 100%;\r\n\tmax-width: 500px;\r\n}\r\n.highcharts-data-table caption {\r\n    padding: 1em 0;\r\n    font-size: 1.2em;\r\n    color: #555;\r\n}\r\n.highcharts-data-table th {\r\n\tfont-weight: 600;\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n    background: #f8f8f8;\r\n}\r\n.highcharts-data-table tr:hover {\r\n    background: #f1f7ff;\r\n}\r\n\r\n</style>",
    "<script>\r\n\r\nimport Button from \"sveltestrap/src/Button.svelte\";\r\nimport  {pop} from \"svelte-spa-router\";\r\n\r\nconst URL_BASE = \"api/v2/global-suicides\";\r\n\r\nasync function loadGraph(){\r\n\r\nconst resData = await fetch(URL_BASE);\r\nlet MyData = await resData.json();\r\n\r\nlet countries = Array.from(MyData.map((d) => {return d.country+\" \"+d.year;}));\r\nlet mens = Array.from(MyData.map((d) => {return parseFloat(d.men);}));\r\nlet womens = Array.from(MyData.map((d) => {return parseFloat(d.women);}));\r\nlet averages = Array.from(MyData.map((d) => {return parseFloat(d.average);}));\r\nconsole.log(\"mens:\");\r\nconsole.log(mens);\r\nconsole.log(\"womens:\");\r\nconsole.log(womens);\r\nconsole.log(\"averages\");\r\nconsole.log(averages);\r\n\r\nconsole.log(\"Graph_NONO\");\r\n\r\nHighcharts.chart('container', {\r\n    chart: {\r\n        type: 'bar'\r\n    },\r\n    title: {\r\n        text: 'Tasa de suicidio por países.'\r\n    },\r\n    subtitle: {\r\n        text: 'Fuente: <a href=\"https://es.wikipedia.org/wiki/Anexo:Pa%C3%ADses_por_tasa_de_suicidio\">Wikipedia.org</a>'\r\n    },\r\n    xAxis: {\r\n        categories: countries,\r\n        title: {\r\n            text: null\r\n        }\r\n    },\r\n    yAxis: {\r\n        min: 0,\r\n        title: {\r\n            text: 'Suicidios por cada 100.000 personas.',\r\n            align: 'high'\r\n        },\r\n        labels: {\r\n            overflow: 'justify'\r\n        }\r\n    },\r\n    tooltip: {\r\n        valueSuffix: 'Personas'\r\n    },\r\n    plotOptions: {\r\n        bar: {\r\n            dataLabels: {\r\n                enabled: true\r\n            }\r\n        }\r\n    },\r\n    legend: {\r\n        layout: 'vertical',\r\n        align: 'right',\r\n        verticalAlign: 'top',\r\n        x: -40,\r\n        y: 350,\r\n        floating: true,\r\n        borderWidth: 1,\r\n        backgroundColor:\r\n            Highcharts.defaultOptions.legend.backgroundColor || '#FFFFFF',\r\n        shadow: true\r\n    },\r\n    credits: {\r\n        enabled: false\r\n    },\r\n    series: [{\r\n        name: 'Hombres',\r\n        data: mens\r\n    }, {\r\n        name: 'Mujeres',\r\n        data: womens\r\n    }, {\r\n        name: 'Media',\r\n        data: averages\r\n    }]\r\n});\r\n}\r\n\r\n</script>\r\n\r\n<svelte:head>\r\n    <script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/series-label.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\" defer></script>\r\n</svelte:head>\r\n\r\n<main>\r\n    <h2>Gráfico highchart</h2>\r\n    <Button color=\"info\" on:click=\"{pop}\">Atrás</Button>\r\n    <figure class=\"highcharts-figure\">\r\n        <div id=\"container\"></div>\r\n        <p class=\"highcharts-description\">\r\n            El gráfico de barras muestra un estudio de personas que se han suicidado por cada 100.000 habitantes\r\n            en distintos países.\r\n        </p>\r\n    </figure>\r\n</main>\r\n\r\n<style>\r\n.highcharts-figure, .highcharts-data-table table {\r\n    min-width: 310px; \r\n    max-width: 1000px;\r\n    margin: 1em auto;\r\n}\r\n\r\n#container {\r\n    height: 1000px;\r\n}\r\n\r\n.highcharts-data-table table {\r\n\tfont-family: Verdana, sans-serif;\r\n\tborder-collapse: collapse;\r\n\tborder: 1px solid #EBEBEB;\r\n\tmargin: 10px auto;\r\n\ttext-align: center;\r\n\twidth: 100%;\r\n\tmax-width: 500px;\r\n}\r\n.highcharts-data-table caption {\r\n    padding: 1em 0;\r\n    font-size: 1.2em;\r\n    color: #555;\r\n}\r\n.highcharts-data-table th {\r\n\tfont-weight: 600;\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n    background: #f8f8f8;\r\n}\r\n.highcharts-data-table tr:hover {\r\n    background: #f1f7ff;\r\n}\r\n</style>\r\n",
    "<script>\r\n\r\nimport Button from \"sveltestrap/src/Button.svelte\";\r\nimport  {pop} from \"svelte-spa-router\";\r\n\r\nconst URL_BASE = \"api/v2/global-suicides\";\r\n\r\nasync function loadGraph(){\r\n    \r\n    const resData = await fetch(URL_BASE);\r\n    let MyData = await resData.json();\r\n    let countries = Array.from(MyData.map((d) => {return d.country+d.year;}));\r\n    let averages = Array.from(MyData.map((d) => {return parseFloat(d.average);}));\r\n\r\n    const URL_BASE_grupo_02 = \"/api/v2/rural-tourism-stats\";\r\n    const resData_1 = await fetch(URL_BASE_grupo_02);\r\n    console.log(\"fetch a \" + URL_BASE_grupo_02);\r\n    let MyData_1 = await resData_1.json();\r\n    let avg_1 = Array.from(MyData_1.map((d) => {return parseFloat(d.averagestay);}));\r\n    console.log(\"Datos media Marta:\");\r\n    console.log(avg_1);\r\n    \r\n    console.log(\"Graph_NONO y marta\");\r\n\r\n    Highcharts.chart('container', {\r\n        chart: {\r\n            type: 'bar'\r\n        },\r\n        title: {\r\n            text: 'Integración con SOS1920-02.'\r\n        },\r\n        subtitle: {\r\n            text: 'La relacion entre los datos no tiene lógica.'\r\n        },\r\n        xAxis: {\r\n            categories: countries,\r\n            title: {\r\n                text: null\r\n            }\r\n        },\r\n        yAxis: {\r\n            min: 0,\r\n            title: {\r\n                text: 'Media de Suicidios por cada 100.000 personas y media de turismo rural.',\r\n                align: 'high'\r\n            },\r\n            labels: {\r\n                overflow: 'justify'\r\n            }\r\n        },\r\n        tooltip: {\r\n            valueSuffix: 'Personas'\r\n        },\r\n        plotOptions: {\r\n            bar: {\r\n                dataLabels: {\r\n                    enabled: true\r\n                }\r\n            }\r\n        },\r\n        legend: {\r\n            layout: 'vertical',\r\n            align: 'right',\r\n            verticalAlign: 'top',\r\n            x: -40,\r\n            y: 350,\r\n            floating: true,\r\n            borderWidth: 1,\r\n            backgroundColor:\r\n                Highcharts.defaultOptions.legend.backgroundColor || '#FFFFFF',\r\n            shadow: true\r\n        },\r\n        credits: {\r\n            enabled: false\r\n        },\r\n        series: [{\r\n            name: 'Media de turismo',\r\n            data: avg_1\r\n        }, \r\n        {\r\n            name: 'Media de Suicidios',\r\n            data: averages\r\n        }]\r\n    });\r\n}\r\n\r\n</script>\r\n\r\n<svelte:head>\r\n    <script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/series-label.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n</svelte:head>\r\n\r\n<main>\r\n    <h2>Integración con SOS1920-02</h2>\r\n    <Button color=\"info\" on:click=\"{pop}\">Atrás</Button>\r\n    <figure class=\"highcharts-figure\">\r\n        <div id=\"container\"></div>\r\n        <p class=\"highcharts-description\">\r\n            El gráfico muestra valores de la api de grupo 10 y grupo 02. No tienen relación.\r\n        </p>\r\n    </figure>\r\n</main>\r\n\r\n<style>\r\n.highcharts-figure, .highcharts-data-table table {\r\n    min-width: 310px; \r\n    max-width: 1000px;\r\n    margin: 1em auto;\r\n}\r\n\r\n#container {\r\n    height: 1000px;\r\n}\r\n\r\n.highcharts-data-table table {\r\n\tfont-family: Verdana, sans-serif;\r\n\tborder-collapse: collapse;\r\n\tborder: 1px solid #EBEBEB;\r\n\tmargin: 10px auto;\r\n\ttext-align: center;\r\n\twidth: 100%;\r\n\tmax-width: 500px;\r\n}\r\n.highcharts-data-table caption {\r\n    padding: 1em 0;\r\n    font-size: 1.2em;\r\n    color: #555;\r\n}\r\n.highcharts-data-table th {\r\n\tfont-weight: 600;\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n    background: #f8f8f8;\r\n}\r\n.highcharts-data-table tr:hover {\r\n    background: #f1f7ff;\r\n}\r\n</style>\r\n",
    "<script>\r\n\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n    import  {pop} from \"svelte-spa-router\";\r\n    import ListGroup from \"sveltestrap/src/ListGroup.svelte\";\r\n    import ListGroupItem  from \"sveltestrap/src/ListGroupItem.svelte\";\r\n    \r\n    const URL_BASE = \"api/v2/global-suicides\";\r\n    \r\n    \r\n    async function loadGraph(){\r\n    \r\n        const resData = await fetch(URL_BASE);\r\n    let MyData = await resData.json();\r\n    \r\n    let countries = Array.from(MyData.map((d) => {return d.country+d.year;}));\r\n    let years = Array.from(MyData.map((d) => {return parseInt(d.year);}));\r\n    console.log(\"Datos nono\");\r\n    console.log(years);\r\n\r\n\r\n    const URL_BASE_grupo_01 = \"/api/v2/poverty-stats\";\r\n    console.log(\"fetch a \" + URL_BASE_grupo_01);\r\n    const resData_2 = await fetch(URL_BASE_grupo_01);\r\n    let MyData_2 = await resData_2.json();\r\n    let avg_2 = Array.from(MyData_2.map((d) => {return parseInt(d.poverty_prp);}));\r\n    console.log(\"Datos Ángela:\");\r\n    console.log(avg_2);\r\n    \r\n    console.log(\"Graph_NONO y Angela\");\r\n\r\n    Highcharts.chart('container', {\r\n        chart: {\r\n            type: 'bar'\r\n        },\r\n        title: {\r\n            text: 'Integración con SOS1920-01.'\r\n        },\r\n        subtitle: {\r\n            text: 'La relacion entre los datos no tiene lógica.'\r\n        },\r\n        xAxis: {\r\n            categories: countries,\r\n            title: {\r\n                text: null\r\n            }\r\n        },\r\n        yAxis: {\r\n            min: 0,\r\n            title: {\r\n                text: 'Media de Suicidios por cada 100.000 personas y media de pobreza',\r\n                align: 'high'\r\n            },\r\n            labels: {\r\n                overflow: 'justify'\r\n            }\r\n        },\r\n        tooltip: {\r\n            valueSuffix: 'Personas'\r\n        },\r\n        plotOptions: {\r\n            bar: {\r\n                dataLabels: {\r\n                    enabled: true\r\n                }\r\n            }\r\n        },\r\n        legend: {\r\n            layout: 'vertical',\r\n            align: 'right',\r\n            verticalAlign: 'top',\r\n            x: -40,\r\n            y: 350,\r\n            floating: true,\r\n            borderWidth: 1,\r\n            backgroundColor:\r\n                Highcharts.defaultOptions.legend.backgroundColor || '#FFFFFF',\r\n            shadow: true\r\n        },\r\n        credits: {\r\n            enabled: false\r\n        },\r\n        series: [{\r\n            name: 'Pobreza',\r\n            data: avg_2\r\n        },\r\n         {\r\n            name: 'Años',\r\n            data: years\r\n        }]\r\n    });\r\n    \r\n    }\r\n    \r\n    \r\n    </script>\r\n    \r\n    <svelte:head>\r\n        <script src=\"https://code.highcharts.com/highcharts.js\" defer></script>\r\n        <script src=\"https://code.highcharts.com/modules/series-label.js\"  defer></script>\r\n        <script src=\"https://code.highcharts.com/modules/exporting.js\"  defer></script>\r\n        <script src=\"https://code.highcharts.com/modules/export-data.js\"  defer></script>\r\n        <script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\" defer></script>\r\n    </svelte:head>\r\n    \r\n    <main>\r\n        <h2>Integración con SOS1920-01</h2>\r\n        <Button color=\"info\" on:click=\"{pop}\">Atrás</Button>\r\n        <figure class=\"highcharts-figure\">\r\n            <div id=\"container\"></div>\r\n            <p class=\"highcharts-description\">\r\n                El gráfico muestra valores de la api de grupo 10 y grupo 01. No tienen relación.\r\n            </p>\r\n        </figure>\r\n    </main>\r\n    \r\n    <style>\r\n    .highcharts-figure, .highcharts-data-table table {\r\n        min-width: 310px; \r\n        max-width: 1000px;\r\n        margin: 1em auto;\r\n    }\r\n    \r\n    #container {\r\n        height: 1000px;\r\n    }\r\n    \r\n    .highcharts-data-table table {\r\n        font-family: Verdana, sans-serif;\r\n        border-collapse: collapse;\r\n        border: 1px solid #EBEBEB;\r\n        margin: 10px auto;\r\n        text-align: center;\r\n        width: 100%;\r\n        max-width: 500px;\r\n    }\r\n    .highcharts-data-table caption {\r\n        padding: 1em 0;\r\n        font-size: 1.2em;\r\n        color: #555;\r\n    }\r\n    .highcharts-data-table th {\r\n        font-weight: 600;\r\n        padding: 0.5em;\r\n    }\r\n    .highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n        padding: 0.5em;\r\n    }\r\n    .highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n        background: #f8f8f8;\r\n    }\r\n    .highcharts-data-table tr:hover {\r\n        background: #f1f7ff;\r\n    }\r\n    </style>\r\n    ",
    "<script>\r\n\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n    import  {pop} from \"svelte-spa-router\";\r\n    import ListGroup from \"sveltestrap/src/ListGroup.svelte\";\r\n    import ListGroupItem  from \"sveltestrap/src/ListGroupItem.svelte\";\r\n    \r\n    const URL_BASE = \"api/v2/global-suicides\";\r\n    \r\n    \r\n    async function loadGraph(){\r\n    \r\n    const resData = await fetch(URL_BASE);\r\n    let MyData = await resData.json();\r\n    \r\n    let countries = Array.from(MyData.map((d) => {return d.country+d.year;}));\r\n    let averages = Array.from(MyData.map((d) => {return parseFloat(d.average);}));\r\n\r\n\r\n    const URL_BASE_grupo_26 = \"/api/v3/goalscorers\";\r\n    console.log(\"fetch a \" + URL_BASE_grupo_26);\r\n    const resData_3 = await fetch(URL_BASE_grupo_26);\r\n    let MyData_3 = await resData_3.json();\r\n    let avg_3 = Array.from(MyData_3.map((d) => {return parseInt(d.teams);}));\r\n    console.log(\"Datos goleadores:\");\r\n    console.log(avg_3);\r\n        \r\n    console.log(\"Graph_NONO y goleadores\");\r\n\r\n    Highcharts.chart('container', {\r\n        chart: {\r\n            type: 'bar'\r\n        },\r\n        title: {\r\n            text: 'Integración con SOS1920-26.'\r\n        },\r\n        subtitle: {\r\n            text: 'La relacion entre los datos no tiene lógica.'\r\n        },\r\n        xAxis: {\r\n            categories: countries,\r\n            title: {\r\n                text: null\r\n            }\r\n        },\r\n        yAxis: {\r\n            min: 0,\r\n            title: {\r\n                text: 'Media de Suicidios por cada 100.000 personas y y equipos de la api goalscorers.',\r\n                align: 'high'\r\n            },\r\n            labels: {\r\n                overflow: 'justify'\r\n            }\r\n        },\r\n        tooltip: {\r\n            valueSuffix: 'Personas'\r\n        },\r\n        plotOptions: {\r\n            bar: {\r\n                dataLabels: {\r\n                    enabled: true\r\n                }\r\n            }\r\n        },\r\n        legend: {\r\n            layout: 'vertical',\r\n            align: 'right',\r\n            verticalAlign: 'top',\r\n            x: -40,\r\n            y: 350,\r\n            floating: true,\r\n            borderWidth: 1,\r\n            backgroundColor:\r\n                Highcharts.defaultOptions.legend.backgroundColor || '#FFFFFF',\r\n            shadow: true\r\n        },\r\n        credits: {\r\n            enabled: false\r\n        },\r\n        series: [{\r\n            name: 'Equipos',\r\n            data: avg_3\r\n        }, \r\n         {\r\n            name: 'Media',\r\n            data: averages\r\n        }]\r\n    });\r\n        \r\n    }\r\n    \r\n    \r\n    </script>\r\n    \r\n    <svelte:head>\r\n        <script src=\"https://code.highcharts.com/highcharts.js\" defer></script>\r\n        <script src=\"https://code.highcharts.com/modules/series-label.js\"  defer></script>\r\n        <script src=\"https://code.highcharts.com/modules/exporting.js\"  defer></script>\r\n        <script src=\"https://code.highcharts.com/modules/export-data.js\"  defer></script>\r\n        <script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\" defer></script>\r\n    </svelte:head>\r\n    \r\n    <main>\r\n        <h2>Integración con SOS1920-26</h2>\r\n        <Button color=\"info\" on:click=\"{pop}\">Atrás</Button>\r\n        <figure class=\"highcharts-figure\">\r\n            <div id=\"container\"></div>\r\n            <p class=\"highcharts-description\">\r\n                El gráfico muestra valores de la api de grupo 10 y grupo 26. No tienen relación.\r\n            </p>\r\n        </figure>\r\n    </main>\r\n    \r\n    <style>\r\n    .highcharts-figure, .highcharts-data-table table {\r\n        min-width: 310px; \r\n        max-width: 1000px;\r\n        margin: 1em auto;\r\n    }\r\n    \r\n    #container {\r\n        height: 1000px;\r\n    }\r\n    \r\n    .highcharts-data-table table {\r\n        font-family: Verdana, sans-serif;\r\n        border-collapse: collapse;\r\n        border: 1px solid #EBEBEB;\r\n        margin: 10px auto;\r\n        text-align: center;\r\n        width: 100%;\r\n        max-width: 500px;\r\n    }\r\n    .highcharts-data-table caption {\r\n        padding: 1em 0;\r\n        font-size: 1.2em;\r\n        color: #555;\r\n    }\r\n    .highcharts-data-table th {\r\n        font-weight: 600;\r\n        padding: 0.5em;\r\n    }\r\n    .highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n        padding: 0.5em;\r\n    }\r\n    .highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n        background: #f8f8f8;\r\n    }\r\n    .highcharts-data-table tr:hover {\r\n        background: #f1f7ff;\r\n    }\r\n    </style>\r\n    ",
    "<script>\r\n\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n    import  {pop} from \"svelte-spa-router\";\r\n    import ListGroup from \"sveltestrap/src/ListGroup.svelte\";\r\n    import ListGroupItem  from \"sveltestrap/src/ListGroupItem.svelte\";\r\n    \r\n    const URL_BASE = \"api/v2/global-suicides\";\r\n           \r\n    async function loadGraph(){\r\n    \r\n    const resData = await fetch(URL_BASE);\r\n    let MyData = await resData.json();\r\n    \r\n    let countries = Array.from(MyData.map((d) => {return d.country+d.year;}));\r\n    let averages = Array.from(MyData.map((d) => {return parseFloat(d.average);}));\r\n  \r\n    const URL_BASE_grupo_22 = \"/api/v1/og-basket-stats\";\r\n    console.log(\"fetch a \" + URL_BASE_grupo_22);\r\n    const resData_4 = await fetch(URL_BASE_grupo_22);\r\n    let MyData_4 = await resData_4.json();\r\n    let avg_4 = Array.from(MyData_4.map((d) => {return parseInt(d.threepoints);}));\r\n    console.log(\"Datos triples:\");\r\n    console.log(avg_4);\r\n\r\n    \r\n    console.log(\"Graph_NONO y basket\");\r\n\r\n    Highcharts.chart('container', {\r\n        chart: {\r\n            type: 'bar'\r\n        },\r\n        title: {\r\n            text: 'Integración con SOS1920-22.'\r\n        },\r\n        subtitle: {\r\n            text: 'La relacion entre los datos no tiene lógica.'\r\n        },\r\n        xAxis: {\r\n            categories: countries,\r\n            title: {\r\n                text: null\r\n            }\r\n        },\r\n        yAxis: {\r\n            min: 0,\r\n            title: {\r\n                text: 'Suicidios por cada 100.000 personas y triples de la api og-basket-stats',\r\n                align: 'high'\r\n            },\r\n            labels: {\r\n                overflow: 'justify'\r\n            }\r\n        },\r\n        tooltip: {\r\n            valueSuffix: 'Personas'\r\n        },\r\n        plotOptions: {\r\n            bar: {\r\n                dataLabels: {\r\n                    enabled: true\r\n                }\r\n            }\r\n        },\r\n        legend: {\r\n            layout: 'vertical',\r\n            align: 'right',\r\n            verticalAlign: 'top',\r\n            x: -40,\r\n            y: 350,\r\n            floating: true,\r\n            borderWidth: 1,\r\n            backgroundColor:\r\n                Highcharts.defaultOptions.legend.backgroundColor || '#FFFFFF',\r\n            shadow: true\r\n        },\r\n        credits: {\r\n            enabled: false\r\n        },\r\n        series: [{\r\n            name: 'Triples',\r\n            data: avg_4\r\n        },\r\n         {\r\n            name: 'Media',\r\n            data: averages\r\n        }]\r\n    });\r\n    }\r\n\r\n    </script>\r\n    \r\n    <svelte:head>\r\n        <script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n        <script src=\"https://code.highcharts.com/modules/series-label.js\"></script>\r\n        <script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n        <script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n        <script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n    </svelte:head>\r\n    \r\n    <main>\r\n        <h2>Integración con SOS1920-22</h2>\r\n        <Button color=\"info\" on:click=\"{pop}\">Atrás</Button>\r\n        <figure class=\"highcharts-figure\">\r\n            <div id=\"container\"></div>\r\n            <p class=\"highcharts-description\">\r\n                El gráfico muestra valores de la api de grupo 10 y grupo 22. No tienen relación.\r\n            </p>\r\n        </figure>\r\n    </main>\r\n    \r\n    <style>\r\n    .highcharts-figure, .highcharts-data-table table {\r\n        min-width: 310px; \r\n        max-width: 1000px;\r\n        margin: 1em auto;\r\n    }\r\n    \r\n    #container {\r\n        height: 1000px;\r\n    }\r\n    \r\n    .highcharts-data-table table {\r\n        font-family: Verdana, sans-serif;\r\n        border-collapse: collapse;\r\n        border: 1px solid #EBEBEB;\r\n        margin: 10px auto;\r\n        text-align: center;\r\n        width: 100%;\r\n        max-width: 500px;\r\n    }\r\n    .highcharts-data-table caption {\r\n        padding: 1em 0;\r\n        font-size: 1.2em;\r\n        color: #555;\r\n    }\r\n    .highcharts-data-table th {\r\n        font-weight: 600;\r\n        padding: 0.5em;\r\n    }\r\n    .highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n        padding: 0.5em;\r\n    }\r\n    .highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n        background: #f8f8f8;\r\n    }\r\n    .highcharts-data-table tr:hover {\r\n        background: #f1f7ff;\r\n    }\r\n    </style>\r\n    ",
    "<script>\r\n\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n    import  {pop} from \"svelte-spa-router\";\r\n    import ListGroup from \"sveltestrap/src/ListGroup.svelte\";\r\n    import ListGroupItem  from \"sveltestrap/src/ListGroupItem.svelte\";\r\n    \r\n    const URL_BASE = \"api/v2/global-suicides\";\r\n           \r\n    async function loadGraph(){\r\n    \r\n    const resData = await fetch(URL_BASE);\r\n    let MyData = await resData.json();\r\n    \r\n    let countries = Array.from(MyData.map((d) => {return d.country;}));\r\n    let years = Array.from(MyData.map((d) => {return parseInt(d.year);}));\r\n  \r\n    const URL_BASE_EXT = \"https://www.etnassoft.com/api/v1/get/?category=libros_programacion&criteria=most_viewed\";\r\n    console.log(\"fetch a \" + URL_BASE_EXT);\r\n    \r\n    const resData_Ext = await fetch(URL_BASE_EXT);\r\n    let MyData_Ext = await resData_Ext.json();\r\n    console.log(\"Mydata ext:\");\r\n    console.log(MyData_Ext);\r\n\r\n    let data_ext = [];\r\n    MyData_Ext.forEach(aux => data_ext.push(parseInt(aux.publisher_date)));\r\n    console.log(\"Datos externos:\");\r\n    console.log(data_ext);\r\n\r\n    let years_public = Array.from(new Set(MyData_Ext.map((d) => {return parseInt(d.publisher_date);})));\r\n    console.log(\"Datos externos2 no muestra repetidos:\");\r\n    console.log(years_public);\r\n    \r\n    console.log(\"Graph_Ext1\");\r\n\r\n    Highcharts.chart('container', {\r\n        chart: {\r\n            type: 'bar'\r\n        },\r\n        title: {\r\n            text: 'Integración con Api Externa 1. (Usando Cors)'\r\n        },\r\n        subtitle: {\r\n            text: 'La relacion entre los datos no tiene lógica.'\r\n        },\r\n        xAxis: {\r\n            categories: countries,\r\n            title: {\r\n                text: null\r\n            }\r\n        },\r\n        yAxis: {\r\n            min: 0,\r\n            title: {\r\n                text: 'Años de media de suicidios frente a años de publicaciones de libros de programación',\r\n                align: 'high'\r\n            },\r\n            labels: {\r\n                overflow: 'justify'\r\n            }\r\n        },\r\n        tooltip: {\r\n            valueSuffix: 'Años'\r\n        },\r\n        plotOptions: {\r\n            bar: {\r\n                dataLabels: {\r\n                    enabled: true\r\n                }\r\n            }\r\n        },\r\n        legend: {\r\n            layout: 'vertical',\r\n            align: 'right',\r\n            verticalAlign: 'top',\r\n            x: -40,\r\n            y: 0,\r\n            floating: true,\r\n            borderWidth: 1,\r\n            backgroundColor:\r\n                Highcharts.defaultOptions.legend.backgroundColor || '#FFFFFF',\r\n            shadow: true\r\n        },\r\n        credits: {\r\n            enabled: false\r\n        },\r\n        series: [{\r\n            name: 'Años Suicidios',\r\n            data: years\r\n        },\r\n         {\r\n            name: 'Años publiaciones',\r\n            data: data_ext\r\n        }]\r\n    });\r\n    }\r\n\r\n    </script>\r\n    \r\n    <svelte:head>\r\n        <script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n        <script src=\"https://code.highcharts.com/modules/series-label.js\"></script>\r\n        <script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n        <script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n        <script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n    </svelte:head>\r\n    \r\n    <main>\r\n        <h2>Integración con Api Externa 1</h2>\r\n        <Button color=\"info\" on:click=\"{pop}\">Atrás</Button>\r\n        <figure class=\"highcharts-figure\">\r\n            <div id=\"container\"></div>\r\n            <p class=\"highcharts-description\">\r\n                El gráfico muestra valores de la api interna y de una externa. No tienen relación.\r\n            </p>\r\n        </figure>\r\n    </main>\r\n    \r\n    <style>\r\n    .highcharts-figure, .highcharts-data-table table {\r\n        min-width: 310px; \r\n        max-width: 1000px;\r\n        margin: 1em auto;\r\n    }\r\n    \r\n    #container {\r\n        height: 1000px;\r\n    }\r\n    \r\n    .highcharts-data-table table {\r\n        font-family: Verdana, sans-serif;\r\n        border-collapse: collapse;\r\n        border: 1px solid #EBEBEB;\r\n        margin: 10px auto;\r\n        text-align: center;\r\n        width: 100%;\r\n        max-width: 500px;\r\n    }\r\n    .highcharts-data-table caption {\r\n        padding: 1em 0;\r\n        font-size: 1.2em;\r\n        color: #555;\r\n    }\r\n    .highcharts-data-table th {\r\n        font-weight: 600;\r\n        padding: 0.5em;\r\n    }\r\n    .highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n        padding: 0.5em;\r\n    }\r\n    .highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n        background: #f8f8f8;\r\n    }\r\n    .highcharts-data-table tr:hover {\r\n        background: #f1f7ff;\r\n    }\r\n    </style>\r\n    ",
    "<script>\r\n\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n    import  {pop} from \"svelte-spa-router\";\r\n    import ListGroup from \"sveltestrap/src/ListGroup.svelte\";\r\n    import ListGroupItem  from \"sveltestrap/src/ListGroupItem.svelte\";\r\n    \r\n    const URL_BASE = \"api/v2/global-suicides\";\r\n           \r\n    async function loadGraph(){\r\n    \r\n    const resData = await fetch(URL_BASE);\r\n    let MyData = await resData.json();\r\n    \r\n    let countries = Array.from(MyData.map((d) => {return d.country;}));\r\n    console.log(\"countries:\");\r\n    console.log(countries);\r\n\r\n    let length_coords = Array.from(MyData.map((d) => {return parseFloat(d.lengthCoord);}));\r\n    console.log(\"length coords:\");\r\n    console.log(length_coords);\r\n  \r\n    const URL_BASE_EXT = \"/users\";\r\n    console.log(\"fetch a \" + URL_BASE_EXT);\r\n    \r\n    const resData_Ext = await fetch(URL_BASE_EXT);\r\n    console.log(\"resData_Ext:\");\r\n    console.log(resData_Ext);\r\n    let MyData_Ext = await resData_Ext.json();\r\n    console.log(\"Mydata ext.json():\");\r\n    console.log(MyData_Ext);\r\n\r\n    let lng_coord = [];\r\n    MyData_Ext.forEach(aux => lng_coord.push(parseFloat(aux.address.geo.lng)));\r\n    console.log(\"Datos estraidos:\");\r\n    console.log(lng_coord);\r\n\r\n    Highcharts.chart('container', {\r\n        chart: {\r\n            type: 'bar'\r\n        },\r\n        title: {\r\n            text: 'Integración con Api Externa 2. (vía proxy)'\r\n        },\r\n        subtitle: {\r\n            text: 'La relacion entre los datos no tiene lógica.'\r\n        },\r\n        xAxis: {\r\n            categories: countries,\r\n            title: {\r\n                text: null\r\n            }\r\n        },\r\n        yAxis: {\r\n            min: -180,\r\n            title: {\r\n                text: 'Datos de coordenadas longitud de distintas APIs',\r\n                align: 'high'\r\n            },\r\n            labels: {\r\n                overflow: 'justify'\r\n            }\r\n        },\r\n        tooltip: {\r\n            valueSuffix: 'Coordenada Longitud'\r\n        },\r\n        plotOptions: {\r\n            bar: {\r\n                dataLabels: {\r\n                    enabled: true\r\n                }\r\n            }\r\n        },\r\n        legend: {\r\n            layout: 'vertical',\r\n            align: 'right',\r\n            verticalAlign: 'top',\r\n            x: -250,\r\n            y: 650,\r\n            floating: true,\r\n            borderWidth: 1,\r\n            backgroundColor:\r\n                Highcharts.defaultOptions.legend.backgroundColor || '#FFFFFF',\r\n            shadow: true\r\n        },\r\n        credits: {\r\n            enabled: false\r\n        },\r\n        series: [{\r\n            name: 'Coord.Longitud API_Int',\r\n            data: length_coords\r\n        },\r\n         {\r\n            name: 'Coord.Longitud API_Ext',\r\n            data: lng_coord\r\n        }]\r\n    });\r\n    }\r\n\r\n    </script>\r\n    \r\n    <svelte:head>\r\n        <script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n        <script src=\"https://code.highcharts.com/modules/series-label.js\"></script>\r\n        <script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n        <script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n        <script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\" defer></script>\r\n    </svelte:head>\r\n    \r\n    <main>\r\n        <h2>Integración con Api Externa 2</h2>\r\n        <Button color=\"info\" on:click=\"{pop}\">Atrás</Button>\r\n        <figure class=\"highcharts-figure\">\r\n            <div id=\"container\"></div>\r\n            <p class=\"highcharts-description\">\r\n                El gráfico muestra valores de la api interna y de una externa. No tienen relación.\r\n            </p>\r\n        </figure>\r\n    </main>\r\n    \r\n    <style>\r\n    .highcharts-figure, .highcharts-data-table table {\r\n        min-width: 310px; \r\n        max-width: 1000px;\r\n        margin: 1em auto;\r\n    }\r\n    \r\n    #container {\r\n        height: 1000px;\r\n    }\r\n    \r\n    .highcharts-data-table table {\r\n        font-family: Verdana, sans-serif;\r\n        border-collapse: collapse;\r\n        border: 1px solid #EBEBEB;\r\n        margin: 10px auto;\r\n        text-align: center;\r\n        width: 100%;\r\n        max-width: 500px;\r\n    }\r\n    .highcharts-data-table caption {\r\n        padding: 1em 0;\r\n        font-size: 1.2em;\r\n        color: #555;\r\n    }\r\n    .highcharts-data-table th {\r\n        font-weight: 600;\r\n        padding: 0.5em;\r\n    }\r\n    .highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n        padding: 0.5em;\r\n    }\r\n    .highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n        background: #f8f8f8;\r\n    }\r\n    .highcharts-data-table tr:hover {\r\n        background: #f1f7ff;\r\n    }\r\n    </style>\r\n    "
  ],
  "names": [],
  "mappings": "AA0GO,kBAAkB,cAA+B,CAAC,AACrD,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,GAAG,CAAC,IAAI,AACpB,CAAC,AAED,UAAU,cAAC,CAAC,AACR,MAAM,CAAE,KAAK,AACjB,CAAC;ACgQD,SAAS,cAAC,CAAC,AAEH,SAAS,QAAQ,CAEjB,QAAQ,KAAK,CAEb,OAAO,GAAG,CAEV,KAAK,IAAI,AAEjB,CAAC;ACxQM,kBAAkB,cAA+B,CAAC,AACrD,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,GAAG,CAAC,IAAI,AACpB,CAAC,AAED,UAAU,cAAC,CAAC,AACR,MAAM,CAAE,KAAK,AACjB,CAAC;ACLM,kBAAkB,cAA+B,CAAC,AACrD,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,GAAG,CAAC,IAAI,AACpB,CAAC,AAED,UAAU,cAAC,CAAC,AACR,MAAM,CAAE,KAAK,AACjB,CAAC;ACDM,kBAAkB,cAA+B,CAAC,AACrD,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,GAAG,CAAC,IAAI,AACpB,CAAC,AAED,UAAU,cAAC,CAAC,AACR,MAAM,CAAE,KAAK,AACjB,CAAC;ACFM,kBAAkB,cAA+B,CAAC,AACrD,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,GAAG,CAAC,IAAI,AACpB,CAAC,AAED,UAAU,cAAC,CAAC,AACR,MAAM,CAAE,KAAK,AACjB,CAAC;AC1BM,kBAAkB,cAA+B,CAAC,AACrD,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,GAAG,CAAC,IAAI,AACpB,CAAC,AAED,UAAU,cAAC,CAAC,AACR,MAAM,CAAE,KAAK,AACjB,CAAC;ACLM,kBAAkB,cAA+B,CAAC,AACrD,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,GAAG,CAAC,IAAI,AACpB,CAAC,AAED,UAAU,cAAC,CAAC,AACR,MAAM,CAAE,KAAK,AACjB,CAAC;ACTM,kBAAkB,cAA+B,CAAC,AACrD,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,GAAG,CAAC,IAAI,AACpB,CAAC,AAED,UAAU,cAAC,CAAC,AACR,MAAM,CAAE,KAAK,AACjB,CAAC;ACNG,kBAAkB,eAA+B,CAAC,AAC9C,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,MAAM,CACjB,MAAM,CAAE,GAAG,CAAC,IAAI,AACpB,CAAC,AAED,UAAU,eAAC,CAAC,AACR,MAAM,CAAE,MAAM,AAClB,CAAC;ACRD,kBAAkB,eAA+B,CAAC,AAC9C,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,MAAM,CACjB,MAAM,CAAE,GAAG,CAAC,IAAI,AACpB,CAAC,AAED,UAAU,eAAC,CAAC,AACR,MAAM,CAAE,MAAM,AAClB,CAAC;ACAD,kBAAkB,eAA+B,CAAC,AAC9C,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,MAAM,CACjB,MAAM,CAAE,GAAG,CAAC,IAAI,AACpB,CAAC,AAED,UAAU,eAAC,CAAC,AACR,MAAM,CAAE,MAAM,AAClB,CAAC;AChBD,kBAAkB,eAA+B,CAAC,AAC9C,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,MAAM,CACjB,MAAM,CAAE,GAAG,CAAC,IAAI,AACpB,CAAC,AAED,UAAU,eAAC,CAAC,AACR,MAAM,CAAE,MAAM,AAClB,CAAC;ACDD,kBAAkB,eAA+B,CAAC,AAC9C,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,MAAM,CACjB,MAAM,CAAE,GAAG,CAAC,IAAI,AACpB,CAAC,AAED,UAAU,eAAC,CAAC,AACR,MAAM,CAAE,MAAM,AAClB,CAAC;ACKD,kBAAkB,eAA+B,CAAC,AAC9C,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,MAAM,CACjB,MAAM,CAAE,GAAG,CAAC,IAAI,AACpB,CAAC,AAED,UAAU,eAAC,CAAC,AACR,MAAM,CAAE,MAAM,AAClB,CAAC;ACzBL,kBAAkB,cAA+B,CAAC,AAC9C,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,GAAG,CAAC,IAAI,AACpB,CAAC;ACbD,kBAAkB,cAA+B,CAAC,AAC9C,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,MAAM,CACjB,MAAM,CAAE,GAAG,CAAC,IAAI,AACpB,CAAC,AAED,UAAU,cAAC,CAAC,AACR,MAAM,CAAE,MAAM,AAClB,CAAC;ACZD,kBAAkB,cAA+B,CAAC,AAC9C,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,MAAM,CACjB,MAAM,CAAE,GAAG,CAAC,IAAI,AACpB,CAAC,AAED,UAAU,cAAC,CAAC,AACR,MAAM,CAAE,MAAM,AAClB,CAAC;ACCG,kBAAkB,eAA+B,CAAC,AAC9C,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,MAAM,CACjB,MAAM,CAAE,GAAG,CAAC,IAAI,AACpB,CAAC,AAED,UAAU,eAAC,CAAC,AACR,MAAM,CAAE,MAAM,AAClB,CAAC;ACVD,kBAAkB,eAA+B,CAAC,AAC9C,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,MAAM,CACjB,MAAM,CAAE,GAAG,CAAC,IAAI,AACpB,CAAC,AAED,UAAU,eAAC,CAAC,AACR,MAAM,CAAE,MAAM,AAClB,CAAC;ACXD,kBAAkB,eAA+B,CAAC,AAC9C,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,MAAM,CACjB,MAAM,CAAE,GAAG,CAAC,IAAI,AACpB,CAAC,AAED,UAAU,eAAC,CAAC,AACR,MAAM,CAAE,MAAM,AAClB,CAAC;ACAD,kBAAkB,eAA+B,CAAC,AAC9C,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,MAAM,CACjB,MAAM,CAAE,GAAG,CAAC,IAAI,AACpB,CAAC,AAED,UAAU,eAAC,CAAC,AACR,MAAM,CAAE,MAAM,AAClB,CAAC;ACPD,kBAAkB,eAA+B,CAAC,AAC9C,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,MAAM,CACjB,MAAM,CAAE,GAAG,CAAC,IAAI,AACpB,CAAC,AAED,UAAU,eAAC,CAAC,AACR,MAAM,CAAE,MAAM,AAClB,CAAC"
}